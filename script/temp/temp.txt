202104291644
0 11

FE FE FE FE 68 17 00 43 05 66 55 44 33 22 11 00 1B 6E 05 01 04 40 00 02 00 00 FA 0F 16

FE FE FE FE 68 17 00 43 45 aa aa aa aa aa aa 00 5b 4f 05 01 01 40 01 02 00 00 c6 07 16

F8 FE FE FE FE 68 99 99 99 99 99 99 68 1F 02 E2 35 9E 16
FE FE FE FE 68 44 16 29 04 21 20 68 9F 08 E2 35 53 54 37 5C 49 77 50 16
00> [user\bsp\plc_slave\plcslave.c][plcSlave_relpyDlt645Addr][683]: FE FE FE FE 68 44 16 29 04 21 20 68 9F 08 E2 35 77 49 5C 37 54 53 50 16
00> [user\bsp\plc_slave\plcslave.c][plcSlave_thread][780]recv: FE FE FE FE 68 44 16 29 04 21 20 68 9F 00 37 16
00> [user\bsp\plc_slave\plcslave.c][plcSlave_thread][780]recv: FE FE FE FE 68 44 16 29 04 21 20 68 11 04 33 34 34 35 7D 16
00> [user\bsp\plc_slave\plcslave.c][plcSlave_thread][780]recv: FE FE FE FE 68 44 16 29 04 21 20 68 11 04 33 34 34 35 7D 16

地址域由 6 个字节构成, 每字节 2 位 BCD 码, 地址长度可达12位十进制数. 每块表具有唯一的通信地址, 且与物理层信道无关. 当使用的地址码长度不足 6 字节时, 高位用“0”补足. 通信地址999999999999H为广播地址, 只针对特殊命令有效, 如广播校时和广播冻结等. 广播命令不要求从站应答. 地址域支持缩位寻址, 即从若干低位起, 剩余高位补AAH作为通配符进行读表操作, 从站应答帧的地址域返回实际通信地址.



+CCID: 89860119801651724213\r\n

0x68083F9C "\r\n+CCID: 89860119801651724213\r\n\r..."




OK

+SIM READY
AT
ATE0
AT+CGMM
AT

OK
ATE0

OK

L610-CN-02-00

OK
AT+CPIN?
AT+CGDCONT=1,"IP","cmnet"

+CPIN: READY

OK

OK
AT+CSQ

+CSQ: 13,99

OK
AT+CCID?

+CCID: 89860119801651724213

OK
AT+CIMI?

+CIMI: 460016018117225

OK
AT+CEREG?
AT+MIPCALL?

+CEREG: 0,1

OK

+MIPCALL: 0

OK
AT+MIPCALL=1

OK

+MIPCALL: 10.32.170.10
AT+MIPODM?
AT+MIPODM=1,,"218.56.32.4",9021,0

+MIPODM: 1,2,3,4,5,6

OK

OK

+MIPODM: 1,1
I
0> 10 40 01 00 41 16
00> RecvFrame_0x10-1314 : byCtrl:40
00>
00> 134257669/104/71 00:08:00.011--Send comm0:
00>
00> 10 80 01 00 81 16
00>
00> 134257669/104/71 00:08:00.011--Send comm0:
00>
00> 10 C9 01 00 CA 16
00> serial recv:10 0B 01 00 0C 16
00>
00> 0064/01/00 00:00:02.000--Recv comm0:
00>
00> 10 0B 01 00 0C 16
00> RecvFrame_0x10-1314 : byCtrl:0B
00>
00> 134257669/104/71 00:08:00.011--Send comm0:
00>
00> 10 C0 01 00 C1 16
00> serial recv:0D 0A 2B 4D 49 50 53 54 41 54 3A 20 31 2C 32 0D 0A  +MIPSTAT: 1,2
00>
00> 0064/01/00 00:00:02.000--Recv comm0:
00>
00> 0D 0A 2B 4D 49 50 53 54 41 54 3A 20 31 2C 32 0D 0A

ftp://192.168.137.254:2121

Sgc1161DecryptData


9000+Le+ CerID+Cer+Date+Scer+asKID

AT+CGMM?
命令作用:获取模组ID
可能的应答: L610-CN-02-00
AT+CPIN?

AT+CGDCONT=1,"IP","cmnet"
AT+CSQ
AT+CCID?
AT+CIMI?
AT+CEREG?

AT+MIPCALL?
AT+MIPCALL=1

AT+MIPODM?
AT+MIPODM=1,,"218.56.32.4",9021,0

Graduate Texts in Mathematics
Undergraduate Texts in Mathematics





00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(252)]:<<< EB 00 F6 EB 00 42 30 00 F1 07 04 01 30 82 02 B6 30 82 02 59 A0 03 02 01 02 02 10 D1 C4 A7 3E 65 1F FD 9E 6A 43 FA B1 E5 E9 05 E5 30 0C 06 08 2A 81 1C CF 55 01 83 75 05 00 30 39 31 0D 30 0B 06 03 55 04 0A 0C 04 45 50 52 49 31 0D 30 0B 06 03 55 04 0B 0C 04 45 50 52 49 31 19 30 17 06 03 55 04 03 0C 10 E6 B5 8B E8 AF 95 E7 A0 94 E7 A9 B6 E6 89 80 20 30 1E 17 0D 31 36 31 32 30 35 31 32 31 32 31 32 5A 17 0D 33 36 31 32 30 35 31 32 31 32 31 32 5A 30 39 31 0D 30 0B 06 03 55 04 0A 0C 04 45 50 52 49 31 0D 30 0B 06 03 55 04 0B 0C 04 45 50 52 49 31 19 30 17 06 03 55 04 03 0C 10 E6 B5 8B E8 AF 95 E7 A0 94 E7 A9 B6 E6 89 80 20 30 59 30 13 06 07 2A 86 48 CE 3D 02 01 06 08 2A 81 1C CF 55 01 82 2D 03 42 00 04 AF 63 1F DC 78 67 F9 B9 53 41 4D 00 00 00 00 66 3E D7
00> [send(13)]:>>> EB 00 07 EB 00 40 45 00 02 90 00 17 D7
00> len: 252, consume: 252, m_ebBuf's size: 252
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(252)]:<<< EB 00 F6 EB 00 42 30 00 F1 07 04 02 89 F9 C5 16 9F EF 1F 0C 11 76 63 3F 6B 3D 21 9D 6B E4 F7 91 B2 9F C1 9A 57 09 CD 88 9E 98 E6 28 3D 03 A3 61 98 67 10 9F 12 4D B5 6B 24 D6 FD DD AB 3E 51 4D 96 34 EC CD A3 82 01 3F 30 82 01 3B 30 0F 06 03 55 1D 13 04 08 30 06 01 01 FF 02 01 03 30 70 06 03 55 1D 23 04 69 30 67 80 14 4A 9D 1A 5E 29 07 18 22 65 6A 8E 63 AD 81 4F 41 5A 53 EA 74 A1 3D A4 3B 30 39 31 0D 30 0B 06 03 55 04 0A 0C 04 53 47 43 43 31 0D 30 0B 06 03 55 04 0B 0C 04 53 47 43 43 31 19 30 17 06 03 55 04 03 0C 10 53 47 43 43 20 43 41 20 53 4D 32 20 43 45 52 54 82 10 4A 63 F4 99 A4 C4 2D 60 6A 19 7F 20 C0 E9 52 4B 30 1D 06 03 55 1D 0E 04 16 04 14 4A 9D 1A 5E 29 07 18 22 65 6A 8E 63 AD 81 4F 41 5A 53 EA 74 30 0B 06 03 53 41 4D 00 00 00 00 66 E6 D7
00> [send(13)]:>>> EB 00 07 EB 00 40 45 00 02 90 00 17 D7
00> len: 252, consume: 252, m_ebBuf's size: 252
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(252)]:<<< EB 00 F6 EB 00 42 30 00 F1 07 04 03 55 1D 0F 04 04 03 02 01 FE 30 81 89 06 03 55 1D 1F 04 81 81 30 7F 30 3D A0 3B A0 39 86 37 68 74 74 70 3A 2F 2F 32 31 31 2E 38 38 2E 32 35 2E 37 37 3A 39 30 30 30 2F 67 66 61 2F 63 72 6C 2F 67 66 61 61 70 70 2E 63 72 6C 2F 53 4D 32 2F 63 72 6C 2E 63 72 6C 30 3E A0 3C A0 3A 86 38 68 74 74 70 3A 2F 2F 32 31 31 2E 38 38 2E 32 35 2E 37 37 3A 39 30 30 30 2F 67 66 61 2F 63 72 6C 2F 67 66 61 61 70 70 2E 63 72 6C 2F 53 4D 32 2F 63 72 6C 30 2E 63 72 6C 30 0C 06 08 2A 81 1C CF 55 01 83 75 05 00 03 49 00 30 46 02 21 00 E9 04 9A CF 7B B0 B8 9D 01 ED 3E 57 FA F2 61 77 C6 AC 1B 4E 4F 37 63 68 9F 49 44 82 F4 32 24 5E 02 21 00 EB DF CE 14 64 37 8A 84 51 D7 F8 8B BE A8 CC 2C 66 17 63 26 EA E8 38 7C 53 41 4D 00 00 00 00 66 72 D7
00> [send(13)]:>>> EB 00 07 EB 00 40 45 00 02 90 00 17 D7
00> len: 252, consume: 252, m_ebBuf's size: 252
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(30)]:<<< EB 00 18 EB 00 42 30 00 13 07 04 04 8A 51 3D 51 9F 4D FB BB 53 41 4D 00 00 00 00 66 E6 D7
00> [send(19)]:>>> EB 00 0D EB 00 40 31 00 08 49 82 48 69 3B 5C 2D AD 66 D7
00> len: 30, consume: 30, m_ebBuf's size: 30
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(75)]:<<< EB 00 45 EB 00 42 32 00 40 FE 13 2B 40 9A D4 C4 69 C0 EB 64 19 53 81 6B 04 D7 09 D0 19 E2 8C 6F 64 13 C0 BF 46 1C 0C D4 13 7B 97 7B 8E A6 77 A0 35 E2 26 39 69 A1 F1 C1 87 D6 8B 61 3C 45 8D 88 7A 70 3B 7E E4 EF E6 D2 E2 20 D7
00> [send(13)]:>>> EB 00 07 EB 00 40 33 00 02 90 00 05 D7
00> len: 75, consume: 75, m_ebBuf's size: 75
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0


00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(252)]:<<< EB 00 F6 EB 00 42 30 00 F1 07 04 01 30 82 02 B6 30 82 02 59 A0 03 02 01 02 02 10 D1 C4 A7 3E 65 1F FD 9E 6A 43 FA B1 E5 E9 05 E5 30 0C 06 08 2A 81 1C CF 55 01 83 75 05 00 30 39 31 0D 30 0B 06 03 55 04 0A 0C 04 45 50 52 49 31 0D 30 0B 06 03 55 04 0B 0C 04 45 50 52 49 31 19 30 17 06 03 55 04 03 0C 10 E6 B5 8B E8 AF 95 E7 A0 94 E7 A9 B6 E6 89 80 20 30 1E 17 0D 31 36 31 32 30 35 31 32 31 32 31 32 5A 17 0D 33 36 31 32 30 35 31 32 31 32 31 32 5A 30 39 31 0D 30 0B 06 03 55 04 0A 0C 04 45 50 52 49 31 0D 30 0B 06 03 55 04 0B 0C 04 45 50 52 49 31 19 30 17 06 03 55 04 03 0C 10 E6 B5 8B E8 AF 95 E7 A0 94 E7 A9 B6 E6 89 80 20 30 59 30 13 06 07 2A 86 48 CE 3D 02 01 06 08 2A 81 1C CF 55 01 82 2D 03 42 00 04 AF 63 1F DC 78 67 F9 B9 53 41 4D 00 00 00 00 66 3E D7
00> [send(13)]:>>> EB 00 07 EB 00 40 45 00 02 90 00 17 D7
00> len: 252, consume: 252, m_ebBuf's size: 252
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(252)]:<<< EB 00 F6 EB 00 42 30 00 F1 07 04 01 30 82 02 B6 30 82 02 59 A0 03 02 01 02 02 10 D1 C4 A7 3E 65 1F FD 9E 6A 43 FA B1 E5 E9 05 E5 30 0C 06 08 2A 81 1C CF 55 01 83 75 05 00 30 39 31 0D 30 0B 06 03 55 04 0A 0C 04 45 50 52 49 31 0D 30 0B 06 03 55 04 0B 0C 04 45 50 52 49 31 19 30 17 06 03 55 04 03 0C 10 E6 B5 8B E8 AF 95 E7 A0 94 E7 A9 B6 E6 89 80 20 30 1E 17 0D 31 36 31 32 30 35 31 32 31 32 31 32 5A 17 0D 33 36 31 32 30 35 31 32 31 32 31 32 5A 30 39 31 0D 30 0B 06 03 55 04 0A 0C 04 45 50 52 49 31 0D 30 0B 06 03 55 04 0B 0C 04 45 50 52 49 31 19 30 17 06 03 55 04 03 0C 10 E6 B5 8B E8 AF 95 E7 A0 94 E7 A9 B6 E6 89 80 20 30 59 30 13 06 07 2A 86 48 CE 3D 02 01 06 08 2A 81 1C CF 55 01 82 2D 03 42 00 04 AF 63 1F DC 78 67 F9 B9 53 41 4D 00 00 00 00 66 3E D7
00> [send(13)]:>>> EB 00 07 EB 00 40 45 00 02 90 96 AD D7
00> len: 252, consume: 252, m_ebBuf's size: 252
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(7)]:<<< EB 00 F6 EB 00 42 30
00> [recv(18)]:<<< 00 F1 07 04 01 30 82 02 B6 30 82 02 59 A0 03 02 01 02
00> [recv(20)]:<<< 02 10 D1 C4 A7 3E 65 1F FD 9E 6A 43 FA B1 E5 E9 05 E5 30 0C
00> [recv(20)]:<<< 06 08 2A 81 1C CF 55 01 83 75 05 00 30 39 31 0D 30 0B 06 03
00> [recv(21)]:<<< 55 04 0A 0C 04 45 50 52 49 31 0D 30 0B 06 03 55 04 0B 0C 04 45
00> len: 86, consume: 0, m_ebBuf's size: 86
00> [recv(166)]:<<< 50 52 49 31 19 30 17 06 03 55 04 03 0C 10 E6 B5 8B E8 AF 95 E7 A0 94 E7 A9 B6 E6 89 80 20 30 1E 17 0D 31 36 31 32 30 35 31 32 31 32 31 32 5A 17 0D 33 36 31 32 30 35 31 32 31 32 31 32 5A 30 39 31 0D 30 0B 06 03 55 04 0A 0C 04 45 50 52 49 31 0D 30 0B 06 03 55 04 0B 0C 04 45 50 52 49 31 19 30 17 06 03 55 04 03 0C 10 E6 B5 8B E8 AF 95 E7 A0 94 E7 A9 B6 E6 89 80 20 30 59 30 13 06 07 2A 86 48 CE 3D 02 01 06 08 2A 81 1C CF 55 01 82 2D 03 42 00 04 AF 63 1F DC 78 67 F9 B9 53 41 4D 00 00 00 00 66 3E D7
00> [send(13)]:>>> EB 00 07 EB 00 40 45 00 02 90 00 17 D7
00> len: 252, consume: 252, m_ebBuf's size: 252
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(252)]:<<< EB 00 F6 EB 00 42 30 00 F1 07 04 02 89 F9 C5 16 9F EF 1F 0C 11 76 63 3F 6B 3D 21 9D 6B E4 F7 91 B2 9F C1 9A 57 09 CD 88 9E 98 E6 28 3D 03 A3 61 98 67 10 9F 12 4D B5 6B 24 D6 FD DD AB 3E 51 4D 96 34 EC CD A3 82 01 3F 30 82 01 3B 30 0F 06 03 55 1D 13 04 08 30 06 01 01 FF 02 01 03 30 70 06 03 55 1D 23 04 69 30 67 80 14 4A 9D 1A 5E 29 07 18 22 65 6A 8E 63 AD 81 4F 41 5A 53 EA 74 A1 3D A4 3B 30 39 31 0D 30 0B 06 03 55 04 0A 0C 04 53 47 43 43 31 0D 30 0B 06 03 55 04 0B 0C 04 53 47 43 43 31 19 30 17 06 03 55 04 03 0C 10 53 47 43 43 20 43 41 20 53 4D 32 20 43 45 52 54 82 10 4A 63 F4 99 A4 C4 2D 60 6A 19 7F 20 C0 E9 52 4B 30 1D 06 03 55 1D 0E 04 16 04 14 4A 9D 1A 5E 29 07 18 22 65 6A 8E 63 AD 81 4F 41 5A 53 EA 74 30 0B 06 03 53 41 4D 00 00 00 00 66 E6 D7
00> [send(13)]:>>> EB 00 07 EB 00 40 45 00 02 90 00 17 D7
00> len: 252, consume: 252, m_ebBuf's size: 252
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(252)]:<<< EB 00 F6 EB 00 42 30 00 F1 07 04 03 55 1D 0F 04 04 03 02 01 FE 30 81 89 06 03 55 1D 1F 04 81 81 30 7F 30 3D A0 3B A0 39 86 37 68 74 74 70 3A 2F 2F 32 31 31 2E 38 38 2E 32 35 2E 37 37 3A 39 30 30 30 2F 67 66 61 2F 63 72 6C 2F 67 66 61 61 70 70 2E 63 72 6C 2F 53 4D 32 2F 63 72 6C 2E 63 72 6C 30 3E A0 3C A0 3A 86 38 68 74 74 70 3A 2F 2F 32 31 31 2E 38 38 2E 32 35 2E 37 37 3A 39 30 30 30 2F 67 66 61 2F 63 72 6C 2F 67 66 61 61 70 70 2E 63 72 6C 2F 53 4D 32 2F 63 72 6C 30 2E 63 72 6C 30 0C 06 08 2A 81 1C CF 55 01 83 75 05 00 03 49 00 30 46 02 21 00 E9 04 9A CF 7B B0 B8 9D 01 ED 3E 57 FA F2 61 77 C6 AC 1B 4E 4F 37 63 68 9F 49 44 82 F4 32 24 5E 02 21 00 EB DF CE 14 64 37 8A 84 51 D7 F8 8B BE A8 CC 2C 66 17 63 26 EA E8 38 7C 53 41 4D 00 00 00 00 66 72 D7
00> [send(13)]:>>> EB 00 07 EB 00 40 45 00 02 90 00 17 D7
00> len: 252, consume: 252, m_ebBuf's size: 252
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(30)]:<<< EB 00 18 EB 00 42 30 00 13 07 04 04 8A 51 3D 51 9F 4D FB BB 53 41 4D 00 00 00 00 66 E6 D7
00> [send(19)]:>>> EB 00 0D EB 00 40 31 00 08 5C B7 C9 A5 D3 99 96 74 70 D7
00> len: 30, consume: 30, m_ebBuf's size: 30
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(4)]:<<< EB 00 45 EB
00> [recv(18)]:<<< 00 42 32 00 40 BD E0 B3 D2 49 2D 0B 0D 85 D6 DA D5 78
00> [recv(20)]:<<< 7D E7 C0 8C 9B 06 E3 A5 0B 22 B0 10 A8 F1 33 6C 96 4D EC FC
00> [recv(20)]:<<< AF 9E A2 E1 8B 50 C9 A6 42 52 67 05 AA 9F 8F 84 6C E4 44 67
00> [recv(13)]:<<< D9 83 63 AC 72 4E B4 8A 18 B6 C9 20 D7
00> [send(13)]:>>> EB 00 07 EB 00 40 33 00 02 90 00 05 D7
00> len: 75, consume: 75, m_ebBuf's size: 75
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(11)]:<<< EB 00 05 EB 00 42 36 00 00 78 D7
00> [send(35)]:>>> EB 00 1D EB 00 40 37 00 18 31 32 30 31 30 32 30 35 31 30 39 32 30 36 30 38 39 32 30 36 30 38 36 38 5B D7
00> len: 11, consume: 11, m_ebBuf's size: 11
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(11)]:<<< EB 00 05 EB 00 42 38 00 00 7A D7
00> [send(19)]:>>> EB 00 0D EB 00 40 39 00 08 01 13 33 00 00 01 1B 4F 33 D7
00> len: 11, consume: 11, m_ebBuf's size: 11
00> len: 0, consume: 0, m_ebBuf's size: 0
00> [recv(11)]:<<< EB 00 05 EB 00 42 3A 00 00 7C D7
00> [PbKeybuf]:<<< 00 00 40 DB 7A 37 4C 33 63 C8 43 8A FA FC B5 99 74 F2 B8 9F 4F C1 F8 EF 58 90 66 71 7B 6B 03 13 FA 8C 37 22 1D 98 78 89 65 C9 05 F7 11 36 FF B9 06 B8 8C 49 82 99 67 F0 C8 28 61 A3 50 69 E6 93 D0 1A 95 1A 95 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00> [send(92)]:>>> EB 00 56 EB 00 48 5A 21 95 A1 5A 21 EB B8 D9 FF EA 5A 2F 9E D1 BA 38 B9 D1 BA 38 B9 BC 49 6D DB 1F 0A D9 06 4C 5C 3C E8 4C 5C 3C E8 C3 E3 51 04 5D 37 BA 2C 01 AD 45 E9 01 AD 45 E9 FD AF 83 51 16 86 8A FE 7E 8B 11 5D 7E 8B 11 5D E3 A3 E3 FA ED A8 4D 22 72 DA 32 1D 72 DA F2 D7
00> len: 11, consume: 11, m_ebBuf's size: 11



当前软件版本:
4.19.56 Build 120704 Rel.39260n
当前硬件版本：
WR740N 5.0/6.0/7.0 00000000


term_auth_bin_0023.cer
term_auth_bin_0024.cer

前端机界面-主-SCADA态
加密机地址:  172.20.51.49:6666
连接超时: 5000毫秒
出错切换计数: 3

104测试, 自己的IP设置为
172.20.43.184:2404

杜春艳



终端ID T230E0192165202103160038
终端ESN 1201020510920608

git.exe clone --progress -v "https://github.com/stepancheg/rust-protobuf" "D:\mydoc\repo\github\rust-protobuf"


--host=HOST       cross-compile to build programs to run on HOST [BUILD]
--target=TARGET   configure for building compilers for TARGET [HOST]



0xb6d1420a
CheckRealtimeData
Thread #2 [linuxttu] 1967 [core: 2] (Suspended : Signal : SIGBUS:Bus error)
0xb6d296fe
0xb6d1420a
./configure --target=arm-none-linux-gnueabi --program-prefix=arm-none-linux-gnueabi-  --prefix=/home/enzo

./configure --target=arm-linux-gnueabihf --program-prefix=arm-linux-gnueabihf-  --prefix=/opt/gdb-12.1

--host=arm-linux-gnueabihf --target=arm-linux-gnueabihf

./configure  --host=arm-linux-gnueabihf --target=arm-linux-gnueabihf --program-prefix=arm-linux-gnueabihf-  --prefix=/opt/gdb-12.1


scp -P 8888  tele sysadm@192.168.10.43:/home/sysadm/bin/


————————————————————————————————————————————————————————————————————————————————————————————————
docker运行arm ubuntu镜像

参考：
1. https://www.latelee.org/docker/armdocker-run-arm-docker-on-x86.html
2. https://hub.docker.com/r/arm32v7/ubuntu

armdocker：在x86上模拟运行arm容器
dockerhub-arm32v7/ubuntu
$ docker pull arm32v7/ubuntu:18.04
$ docker run -it --rm arm32v7/ubuntu:18.04
1
2
不行就参考1那样：

$ sudo apt install -y qemu-user-static binfmt-support
1
docker命令：
Docker 容器使用

————————————————————————————————————————————————————————————————————————————————————————————————
https://zhuanlan.zhihu.com/p/200947117

docker pull arm64v8/ubuntu:18.04
sudo apt-get install -y --no-install-recommends qemu-user-static binfmt-support
docker run -itd -v /usr/bin/qemu-aarch64-static:/usr/bin/qemu-aarch64-static arm64v8/ubuntu:18.04
docker run -it --rm  --name armhfbusybox -v /usr/bin/qemu-arm-static:/usr/bin/qemu-arm-static armhf/busybox

docker run -it --rm -v /usr/bin/qemu-arm-static:/usr/bin/qemu-arm-static arm32v7/ubuntu:16.04
docker run -itd -v /usr/bin/qemu-arm-static:/usr/bin/qemu-arm-static -v /opt:/opt arm32v7/ubuntu:16.04

docker exec -it recursing_joliot /bin/bash

apt install -y apt-transport-https

docker export mystifying_satoshi > ubuntu1604armhf.tar

cat ubuntu1604armhf.tar | docker import - test/ubuntu1604armhf:v1
docker run -itd -v /usr/bin/qemu-arm-static:/usr/bin/qemu-arm-static -v /opt:/opt test/ubuntu1604armhf:v1 /bin/bash

echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial main restricted universe multiverse">etc/apt/sources.list
echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-updates main restricted universe multiverse">>etc/apt/sources.list
echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-backports main restricted universe multiverse">>etc/apt/sources.list
echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-security main restricted universe multiverse">>etc/apt/sources.list


tar --numeric-owner --exclude=/proc --exclude=/sys --exclude=/data/app --exclude=/home --exclude=/var -cvf  zx.tar  /

cat zx.tar | docker import - zx/zx
docker run -itd -v /usr/bin/qemu-arm-static:/usr/bin/qemu-arm-static -v /opt:/opt zx/zx /bin/bash
docker exec -it lucid_tu /bin/bash

./configure CC=arm-linux-gnueabihf-gcc CPP=arm-linux-gnueabihf-cpp CXX=arm-linux-gnueabihf-g++  --host=arm-linux --prefix=/opt/valgrind/lib





68 06 05 04 03 02 01 68 11 04 35 33 33 39 CE 16

FE FE FE FE 68 01 02 03 04 05 06 68 91 6B 35 33 33 39 D3 D3 95 6B 44 54 43 55 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 CC 7C DD 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 DD 33 33 33 33 33 33 33 33 DD 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 DD 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 DD 32 32 32 32 32 32 DD 49 18 4B 16



docker info --format '{{.LoggingDriver}}'
docker logs -f --tail 200 c_iot
docker inspect -f '{{.HostConfig.LogConfig.Type}}' c_iot
/etc/docker/daemon.json

echo "vmware_guest_vmblock_enable=YES" >> /etc/rc.conf
echo "vmware_guest_vmhgfs_enable=YES" >> /etc/rc.conf
echo "vmware_guest_vmmemctl_enable=YES" >> /etc/rc.conf
echo "vmware_guest_vmxnet_enable=YES" >> /etc/rc.conf
echo "vmware_guestd_enable=YES" >> /etc/rc.conf


vmware_guest_vmblock_enable="YES"
vmware_guest_vmhgfs_enable="YES"
vmware_guest_vmmemctl_enable="YES"
vmware_guest_vmxnet_enable="YES"
vmware_guestd_enable="YES"

gdm_enable="YES"

db2 ibase mysql oci odbc psql sqlite

./configure -static -sql-mysql -sql-sqlite -nomake examples -xcb-xlib -xcb -prefix /opt/Qt6_static

apt install -y  build-essential libmpfr-dev libmpc-dev binutils pkg-config autoconf automake libtool zlib1g-dev libsdl1.2-dev libtool-bin libglib2.0-dev libz-dev libpixman-1-dev libbsd-dev dirmngr  vim-addon-mw-utils flex bison gawk openssh-server net-tools

run update_emmc

mkdir -p /home/sysadm/src

chmod +x /home/sysadm/src/gdbserver /usr/libexec/sftp-server


docker run -it /bin/bash --restart=always --privileged=true -p 22:22 -v /home/floyd/dockermap:/map arm32v7/ubuntu:22.04

docker exec -it cc2ad26c0b0c /bin/bash

docker exec -it 24e589bcc793 /bin/bash

docker run -it /bin/bash -v /home/floyd/dockermap:/map arm32v7/ubuntu:20.04

docker run -it -v /home/floyd/dockermap:/map arm32v7/ubuntu:16.04


"1、规约增加对E9361-C0配置的判断
2、将log信息进行分类, 规约报文存放在历史信息中。告警、启机、故障、异常等放到系统日志、系统信息中。"


gt_SysInfo[100] <----> 系统信息监测
/root/para/debug.dat <----> 历史信息监测
/root/syslog/log.txt <----> 系统历史信息监测

m
rt
stdc++
jansson
json-c
pthread

"${workspace_loc:/${ProjName}/src/lib/libjson}"
"${workspace_loc:/${ProjName}/src/lib}"

-fsanitize=address -fno-omit-frame-pointer

/home/sysadm/src/plcproxy

INSERT INTO test (bbb) VALUES (x'37e79f00010203');





{"token":"3","timestamp":"2022-12-9 8:2:25","prio":"0","proType":"02","acqAddr":"010203040506","data":"aAYFBAMCAWgRBDQ20zduFg=="}
{"token":"3","timestamp":"2022-12-5 5:33:18","prio":"0","proType":"02","acqAddr":"010203040506","data":"aAYFBAMCAWgRBDUzszVKFg=="}


DEBUG_TO_SYS_LOG_FILE_WITH_CHK("tcsetattr error: %s", strerror(errno));

LedFaultOn;

#include "tca955.h"

MATHEMATICS FOR MACHINE LEARNING
#ifdef DevTypeC0

#endif

SOCK_ESTABLISHED
SOCK_CLOSE_WAIT
SOCK_CLOSED
SOCK_INIT
SOCK_LISTEN



2022-12-22 15:39: 2-3Tcp_Server connected


#应用启动
appm -s -c lxc01 -n lrZXBranchSwitch

#应用停止
appm -S -c lxc01 -n lrZXBranchSwitch

#应用查询
appm -I -c lxc01 -l

#应用安装
appm -i -c lxc01 -n lrZXBranchSwitch -f /usr/local/default/apps/lrZXBranchSwitch.tar

#应用删除
appm -u -c lxc01 -n lrZXBranchSwitch

rm /data/app/ZaiboServer/root/para/*

cat /data/app/ZaiboServer/root/para/hplc_cco.json


topic: dfdz/set/request/ccoRouter/acqFiles
message: {"token":"1324","timestamp":"2023-1-3 16:9:15","prio":"0","body":[{"acqAddr":"112233445566","proType":"02"}]}

topic: dfdz/get/request/ccoRouter/concurrent
message: {"token":"109","timestamp":"2023-1-3 17:3:38","prio":"0","proType":"02","acqAddr":"202203263663","macAddr":"202203268051","data":"aFGAJgMiIGgRBDMyNDr0Fg=="}

send: 68 0F 00 43 00 00 5F 00 00 02 10 80 17 4B 16

buff
0到2是主程序软件版本, 
3到5是fplc软件版本, 
6到8是cco程序软件版本, 
9到10是fplc硬件版本, 
11到12是hplc硬件版本, 
13到14是尾端硬件版本

/usr/bin/ffmpeg -protocol_whitelist "file,crypto,data,http,https,tls,httpproxy,tcp" -i 2e4dcabbc1361a113d3650776b5dc6fe.m3u8  -c:v libx264 -preset ultrafast -crf 10 t2.mp4



C:\Windows\System32\SppExtComObjHook.dll

./i2cdetect -y 1








pandoc --pdf-engine=xelatex -V CJKmainfont="Noto Sans Mono CJK SC:style=Regular" --highlight-style zenburn  -V colorlinks -V urlcolor=NavyBlue -V geometry:"top=2cm, bottom=1.5cm, left=2cm, right=2cm" BusError.md -o BusError.pdf

sudo apt install -y ubuntu-mate* sshfs git build-essential gdb-multiarch qemu-system-misc gcc-riscv64-linux-gnu binutils-riscv64-linux-gnu  dirmngr gnome-tweaks libfreetype6 libfreetype6-dev freetype2-demos locales texlive-full texmaker texstudio libcgal-dev libcgal-demo convmv samba samba-common smbclient cifs-utils  smbclient pandoc

召测A相电压: 68 20 03 19 04 22 20 68 11 04 33 34 34 35 37 16




报文类型0-透明传输:

[2023-02-21 15:43:44.858]# SEND HEX TO 192.168.0.231 :5000>
AA FF FF 1F 00 12 01 00 20 03 19 04 22 20 10 00 68 20 03 19 04 22 20 68 11 04 33 34 34 35 37 16 B6 84 00 00 1C

[2023-02-21 15:43:50.883]# RECV HEX FROM 192.168.0.231 :5000>
AA FF FF 21 00 12 01 00 16 00 FE FE FE FE 68 20 03 19 04 22 20 68 91 06 33 34 34 35 5A 55 68 16 95 F0 00 00 00 00 9D


报文类型1-3762传输:

[2023-02-21 15:55:38.504]# SEND HEX TO 192.168.0.231 :5000>
AA FF FF 3E 00 12 01 01 00 00 00 00 00 00 2F 00 68 2F 00 41 04 00 5F 00 00 00 66 55 44 33 22 11 20 03 19 04 22 20 13 01 00 00 00 00 10 68 20 03 19 04 22 20 68 11 04 33 34 34 35 37 16 33 16 1C 76 00 00 56

[2023-02-21 15:55:44.529]# RECV HEX FROM 192.168.0.231 :5000>
AA FF FF 40 00 12 01 01 35 00 68 35 00 83 14 00 01 00 00 00 20 03 19 04 22 20 66 55 44 33 22 11 13 01 00 00 00 00 16 FE FE FE FE 68 20 03 19 04 22 20 68 91 06 33 34 34 35 53 55 61 16 79 16 63 DB 00 00 00 00 E8


查询CCO版本信息AFN10-F192, 东软的CCO不支持, 鲁软的马工说友讯达的CCO支持
发送: AA FF FF 2A 00 12 01 01 20 03 19 04 22 20 1b 00 68 1b 00 41 04 00 5f 00 00 00 66 55 44 33 22 11 20 03 19 04 22 20 10 80 17 32 16 01 EC 00 00 73

CCO应答: 信息类不存在
接收: 68 10 00 83 00 00 00 00 00 00 00 02 00 04 89 16


查询CCO版本信息AFN03-F10
发送: AA FF FF 2A 00 12 01 01 20 03 19 04 22 20 1b 00 68 1b 00 41 04 00 5f 00 00 00 66 55 44 33 22 11 20 03 19 04 22 20 03 02 01 91 16 35 63 00 00 EC

接收: AA FF FF 43 00 12 01 01 38 00 68 38 00 83 00 00 00 00 00 00 03 02 01 F2 3F 00 01 00 00 3C B0 04 00 01 E6 00 14 66 55 44 33 22 11 DC 05 01 00 21 03 13 21 03 13 53 45 31 41 25 10 19 01 68 96 80 32 16 65 67 00 00 00 00 B1

376.2用13-F1发送维护规约报文共943字节
68 AF 03 41 04 00 5F 00 00 00 66 55 44 33 22 11 20 03 19 04 22 20 13 01 00 00 00 00 90 AA FF FF 8A 03 01 06 00 00 7B 0D 0A 20 20 22 44 65 76 53 65 6C 66 44 61 74 61 63 6C 61 73 73 52 6F 6F 74 22 3A 20 5B 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 31 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 31 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 31 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 32 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 32 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 32 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E9 A2 84 E7 BD AE E7 BB A7 E7 94 B5 E5 99 A8 E8 BF 94 E6 A0 A1 E5 80 BC 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 33 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 33 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 77 35 35 30 30 E4 B8 AD E6 96 AD E4 BF A1 E5 8F B7 2D 4E 65 74 33 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 34 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B E6 7A 6C 1D 16

CCO应答长度错误
68 10 00 83 00 00 00 00 00 00 00 02 00 02 87 16


CCO用F1-F1发送维护规约报文共912字节
维护规约发送: AA FF FF 9F 03 12 01 03 20 03 19 04 22 20 90 03 AA FF FF 8A 03 01 06 00 00 7B 0D 0A 20 20 22 44 65 76 53 65 6C 66 44 61 74 61 63 6C 61 73 73 52 6F 6F 74 22 3A 20 5B 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 31 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 31 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 31 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 32 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 32 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 32 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E9 A2 84 E7 BD AE E7 BB A7 E7 94 B5 E5 99 A8 E8 BF 94 E6 A0 A1 E5 80 BC 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 33 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 33 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 77 35 35 30 30 E4 B8 AD E6 96 AD E4 BF A1 E5 8F B7 2D 4E 65 74 33 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 34 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B E6 7A 6C AF BE 00 00 98

376.2发送: 68 AF 03 43 04 00 5F 00 00 00 66 55 44 33 22 11 20 03 19 04 22 20 F1 01 00 00 00 90 03 AA FF FF 8A 03 01 06 00 00 7B 0D 0A 20 20 22 44 65 76 53 65 6C 66 44 61 74 61 63 6C 61 73 73 52 6F 6F 74 22 3A 20 5B 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 31 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 31 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 31 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 32 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 32 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 32 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E9 A2 84 E7 BD AE E7 BB A7 E7 94 B5 E5 99 A8 E8 BF 94 E6 A0 A1 E5 80 BC 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 33 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 33 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 77 35 35 30 30 E4 B8 AD E6 96 AD E4 BF A1 E5 8F B7 2D 4E 65 74 33 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 34 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B E6 7A 6C 00 16

B0接收: AA FF FF 8A 03 01 06 00 00 7B 0D 0A 20 20 22 44 65 76 53 65 6C 66 44 61 74 61 63 6C 61 73 73 52 6F 6F 74 22 3A 20 5B 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 31 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 31 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 31 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 32 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 32 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 32 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E9 A2 84 E7 BD AE E7 BB A7 E7 94 B5 E5 99 A8 E8 BF 94 E6 A0 A1 E5 80 BC 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 33 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 33 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 77 35 35 30 30 E4 B8 AD E6 96 AD E4 BF A1 E5 8F B7 2D 4E 65 74 33 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 22 3A 20 34 0D 0A 20 20 20 20 7D 2C 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B E6 7A 6C


376.2通过13-F1发送维护规约报文共255字节时, B0可以接收到全部的报文; 发送256字节时, CCO回长度错误, 所以判断东软的CCO的最大透明传输报文是255
AA FF FF 0E 01 12 01 00 20 03 19 04 22 20 FF 00 AA FF FF 8A 03 01 06 00 00 7B 0D 0A 20 20 22 44 65 76 53 65 6C 66 44 61 74 61 63 6C 61 73 73 52 6F 6F 74 22 3A 20 5B 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 31 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 EB 82 BC 89 B1 66 B1 C0 74 00 00 BC

发送


B0 接收: AA FF FF 8A 03 01 06 00 00 7B 0D 0A 20 20 22 44 65 76 53 65 6C 66 44 61 74 61 63 6C 61 73 73 52 6F 6F 74 22 3A 20 5B 0D 0A 20 20 20 20 7B 0D 0A 20 20 20 20 20 20 22 6C 69 6E 6B 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 64 65 76 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 52 65 67 4E 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 74 79 70 65 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 4E 61 6D 65 22 3A 20 22 E8 AE A1 E9 87 8F E8 8A AF E7 89 87 E7 9A 84 E8 84 89 E5 86 B2 E8 BE 93 E5 85 A5 E4 BF A1 E5 8F B7 31 EF BC 88 E5 A4 87 E7 94 A8 EF BC 89 22 2C 0D 0A 20 20 20 20 20 20 22 55 6E 69 74 22 3A 20 6E 75 6C 6C 2C 0D 0A 20 20 20 20 20 20 22 52 61 74 69 6F 22 3A 20 30 2C 0D 0A 20 20 20 20 20 20 22 54 79 70 65 50 72 6F 70 65 72 74 79 EB 82 BC 89 B1 66 B1








[2023-02-21 16:48:13.318]# SEND HEX TO 192.168.0.231 :5000>
AA FF FF 10 00 12 02 00 00 00 00 26 00 00 12 42 00 68 00 00 00 1E

[2023-02-21 16:48:50.328]# RECV HEX FROM 192.168.0.231 :5000>
AA FF FF 0E 00 12 02 00 00 00 00 26 9A 99 19 40 00 68 00 0A



202204190320
202304030837

维护规约发送重启终端命令: AA FF FF 03 00 06 01 00 04
维护规约发送置默认参数运行的标志为1, 使用功能码03: AA FF FF 03 00 06 09 03 0F
维护规约发送置默认参数运行的标志为0, 使用功能码04: AA FF FF 03 00 06 09 04 08

维护规约发送读取时间命令: AA FF FF 03 00 0A 01 00 08
                接收报文：AA FF FF 09 00 0A 01 74 1C 21 09 10 03 17 46

维护规约发送升级跳转命令: AA FF FF 03 00 06 0A 00 0F

维护规约发送读取md5sum报文：AA FF FF 10 00 01 07 0D 6C 74 75 64 65 76 6C 69 62 2E 64 61 74 39
                  接收报文：AA FF FF 13 00 01 07 10 DC C0 9E 70 D5 17 70 87 D3 6F CD 74 C0 02 87 4E CC


MODBUS发送置默认参数运行的标志为1: 01 71 6F 9C 00 01 61 3B
							 应答: 01 71 02 00 01 62 FC
MODBUS发送置默认参数运行的标志为0, 且crc校验错误: 01 71 6F 9C 00 00 61 3B
							 应答: 01 F1 01 A4 50
MODBUS发送置默认参数运行的标志为0: 01 71 6F 9C 00 00 A0 FB
							 应答: 01 71 02 00 00 A3 3C


DLT645发送置默认参数运行的标志为1: 68 20 03 19 04 22 20 68 1E 01 34 A5 16
						     应答: FE FE FE FE 68 20 03 19 04 22 20 68 9E 01 34 25 16

dfdz/set/request/ccoRouter/childUpdateStart
{
	"devList": [
		{
			"logicAddr": "202204190320",
			"devProtocol": 1,
			"filename": "ltudev.bin",
			"modbusAddr" : 1
		},
		{
			"logicAddr": "202204190321",
			"devProtocol": 0,
			"filename": "ltudev.bin",
			"modbusAddr" : 2
		},
		{
			"logicAddr": "202204190322",
			"devProtocol": 1,
			"filename": "ltudev.bin",
			"modbusAddr" : 3
		}
	]
}

dfdz/set/request/ccoRouter/childUpdateStart
{
	"devList": [
		{
			"logicAddr": "202204190320",
			"devProtocol": 1,
			"filename": "ltudev.bin",
			"modbusAddr" : 1,
			"frameLen" : 900
		}
	]
}



启动广播
发送: 68 2D 00 43 04 00 5F 00 00 00 66 55 44 33 22 11 99 99 99 99 99 99 05 04 00 00 10 68 20 03 19 04 22 20 68 11 04 33 34 34 35 37 16 3E 16
接收: 68 15 00 83 00 00 00 00 00 00 00 01 00 fe ff ff ff 0a 00 89 16

发送:
AA FF FF 1F 00 12 01 02 20 03 19 04 22 20 10 00 68 20 03 19 04 22 20 68 11 04 33 34 34 35 37 16 B6 84 00 00 1E
接收:
AA FF FF 20 00 12 01 02 15 00 68 15 00 83 00 00 00 00 00 00 00 01 00 FE FF FF FF 0A 00 89 16 19 00 00 00 00 00 56

启动广播-Modbus
02 03 04 01 00 01 D4 C9
发送: 68 25 00 43 04 00 5F 00 00 00 66 55 44 33 22 11 99 99 99 99 99 99 05 04 00 00 08 02 03 04 01 00 01 D4 C9 5A 16
发送: 68 2D 00 43 04 00 5F 00 00 00 66 55 44 33 22 11 99 99 99 99 99 99 05 04 00 00 10 68 99 99 99 99 99 99 68 08 06 35 36 37 34 33 34 B1 16 32 16
接收: 68 15 00 83 00 00 00 00 00 00 00 01 00 FE FF FF FF 0A 00 89 16


AA FF FF 1F 00 12 01 02 20 03 19 04 22 20 08 00 02 03 04 01 00 01 D4 C9 00 00 00 00 22

68 99 99 99 99 99 99 68 08 06 35 36 37 34 33 34 B1 16


opengrok-indexer -J=-Djava.util.logging.config.file=/var/opengrok/logging.properties -a /opengrok/lib/opengrok.jar --  -s /opengrok/src -d /opengrok/data -H -P -S -G -W /opengrok/etc/configuration.xml -U http://localhost:8080/source

opengrok-indexer \
    -J=-Djava.util.logging.config.file=/opengrok/etc/logging.properties \
    -a /opengrok/lib/opengrok.jar -- \
    -c /usr/local/bin/ctags \
    -s /opengrok/src -d /opengrok/data -H -P -S -G \
    -W /opengrok/etc/configuration.xml -U http://localhost:8080/source

git clone https://github.com/meetbill/Vim.git


[root@iswbm ~]#sudo apt install -y gcc make ncurses ncurses-devel\
    ctags git tcl-devel \
    ruby ruby-devel \
    lua lua-devel \
    luajit luajit-devel \
    python python-devel \
    perl perl-devel \
    perl-ExtUtils-ParseXS \
    perl-ExtUtils-XSpp \
    perl-ExtUtils-CBuilder \
    perl-ExtUtils-Embed


let fmt = get(g:, 'plug_url_format', 'https://git::@hub.fastgit.org/%s.git')



Functions of Complex Variable and Integral Transforms



https://hub.fastgit.org/JBakamovic/yavide.git


ffmpeg "-hide_banner" "-nostdin" "-y" "-nostats" "-i" "M:/tutorials/清华大学/邓俊辉《数据结构》/第01章/30240184_01-A-1  计算.mp4" "-sws_flags" "spline+accurate_rnd+full_chroma_int" "-color_trc" "2" "-colorspace" "2" "-color_primaries" "2" "-filter_complex" "tvai_fi=model=chf-3:slowmo=1:fps=60:device=0:vram=1:instances=1,tvai_up=model=prob-3:scale=0:w=3840:h=2160:preblur=0:noise=0:details=0:halo=0:blur=0:compression=0:estimate=20:device=0:vram=1:instances=1,scale=w=3840:h=2160:flags=lanczos:threads=0" "-c:v" "prores_ks" "-profile:v" "1" "-vendor" "apl0" "-bits_per_mb" "8000" "-pix_fmt" "yuv422p10le" "-map_metadata" "0" "-movflags" "frag_keyframe+empty_moov+delay_moov+use_metadata_tags+write_colr " "-map_metadata:s:v" "0:s:v" "-map_metadata:s:a" "0:s:a" "-c:a" "copy" "-metadata" "videoai=Slowmo 100% and framerate changed to 60 using chf-3. Enhanced using prob-3 auto with recover details at 0, dehalo at 0, reduce noise at 0, sharpen at 0, revert compression at 0, and anti-alias/deblur at 0. Changed resolution to 3840x2160" "M:/tutorials/清华大学/邓俊辉《数据结构》/第01章/30240184_01-A-1  计算_chf3_prob3_temp.mov"





第2版硬件与第1版硬件区别:
1、第1片TCA9555的IO 信号---GZ_IO(告警指示灯)\ YX_IO(运行指示灯)\BT_RST(蓝牙复位信号)\PCTRL(4G接口) 由第一片TCA955 移动到  第2片TCA955上
	1.1 GZ_IO(告警指示灯)		---->第2片TCA9555 的P14
	1.2 YX_IO(运行指示灯)		---->第2片TCA9555的P13
	1.3 BT_RST(蓝牙复位信号)	---->第2片TCA9555的P12上
	1.4 PCTRL(4G接口)			---->第2片TCA9555的P17上

2、原来由核心板IO Y1FX(遥控反校)  EX_YK_YZ(遥控预置)   EX_YK_ZX1(第1路遥控)  KEX_YK_ZX2 (第2路遥控) NB_YX3（第4路遥信输入）   NB_YX2（第3路遥信输入）    NB_YX1（第2路遥信输入）   NB_YX0（第1路遥信输入） 移到了第2片TCA9555芯片上。
	2.1 核心板IO Y1FX(遥控反校)				---->第2片TCA9555的P00上。
	2.2 核心板IO EX_YK_YZ(遥控预置) 		---->第2片TCA9555的P01上。
	2.3 核心板IO EX_YK_ZX1(第1路遥控) 		---->第2片TCA9555的P02上。
	2.4 核心板IO KEX_YK_ZX2 (第2路遥控) 	---->第2片TCA9555的P03上。
	2.5 核心板IO  NB_YX3（第4路遥信输入）	---->第2片TCA9555的P04上。
	2.6 核心板IO  NB_YX2（第3路遥信输入） 	---->第2片TCA9555的P05上。
	2.7 核心板IO  NB_YX1（第2路遥信输入） 	---->第2片TCA9555的P06上。
	2.8 核心板IO  NB_YX0（第1路遥信输入） 	---->第2片TCA9555的P07上。

3、第2片TCA9555 增加WDI\WD_CTRL 看门狗控制信号引脚,之前没有。
	3.1 WDI 喂狗信号			------>第2片TCA9555的P16上。
	3.2 WD_CTRL 看门狗使能信号	------>第2片TCA9555的P15上。


4、 AD_/RESET 核心板IO 移到了原核心板 Y1FX（遥控返校）的位置上






-fsanitize=address -fno-omit-frame-pointer








868 226 672
u739x0

ilspy




(0-成功, 非0-失败)

预置合01
发送报文：AA FF FF 04 00 0B 01 01 51 5E
接收报文：AA FF FF 04 00 0B 01 01 00 0F

撤销预置03
发送报文：AA FF FF 03 00 0B 03 01 0A
接收报文：AA FF FF 04 00 0B 03 01 00 0D


遥控1合
发送报文：AA FF FF 04 00 0B 02 01 51 5D
接收报文：AA FF FF 04 00 0B 02 01 00 0C

遥控1分
发送报文：AA FF FF 04 00 0B 02 01 91 9D
接收报文：AA FF FF 04 00 0B 02 01 00 0C


遥控2合
发送报文：AA FF FF 04 00 0B 02 02 51 5E
接收报文：AA FF FF 04 00 0B 02 02 00 0F

遥控2分
发送报文：AA FF FF 04 00 0B 02 02 91 9E
接收报文：AA FF FF 04 00 0B 02 02 00 0F




echo "allow_anonymous true">/etc/mosquitto.conf
echo "listener 1883">>/etc/mosquitto.conf
echo "persistence true">>/etc/mosquitto.conf
echo "persistence_location /mosquitto/data/">>/etc//etc/mosquitto.conf
echo "log_dest file /mosquitto/log/mosquitto.log">>/etc//etc/mosquitto.conf




{"token": "200513","timestamp": "2019-05-29T19:05:51.641+0800","iHardVer": "V1.00.01","iSoftdVer": "V1.00.07","eHardVer": "SV01.01","eSoftdVer": "SV01.007",
"runtime_min": 4,"upprogram": 0,"watchdog": 1}


sed -i.bak -r '/\/bin\/mosquitto/d' /etc/rc.local&&
sed -i.bak "13a/bin/mosquitto -v -c /etc/mosquitto.conf&" /etc/rc.local
sed -i.bak -r 's#/bin/mosquitto&#/bin/mosquitto -v -c /etc/mosquitto.conf&#g' /etc/rc.local

以下扫码的内容并非微信提供，请谨慎辨别信息

类型：L21，厂商：东方电子股份有限公司，型号：E9361-A1，ID：L210E0193033202203231120，硬件版本：HV01.01，,生产日期：2022年03月23日。

如需使用，可通过复制获取内容

锦浪 GCI-30K-5G


D30XXXXXX001201608080001, 

D300E0193033202305030001
L210E0193033202203231120

D30DFDZPD001202305010002, 
D30DFDZPD001202305010003




PortTypeEnum.PortType_Serial

UartPortPara


sudo container stop c_e9361app
sudo container uninstall c_e9361app

appSignTool -f /home/sysadm/src/e9361app/bin -b e9361app -l /home/sysadm/src/e9361app/lib -v SV01.007 -o c_e9361app

container install c_e9361app  /home/sysadm/src/c_e9361app.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3    -dev /dev/ttyS7:/dev/ttyS7 -v /data/app:/data/app  -p 5000:5000





德源开关默认9600 偶校验
德源分闸报文:
DI: 06 01 01 01
TX：68 41 20 60 10 22 11 68 1c 0e 34 34 34 39 33 33 33 33 33 33 33 33 33 35 d3 16
RX：FE FE FE FE 68 41 20 60 10 22 11 68 9C 00 70 16 

德源查询分合闸状态报文:
DI: 04 00 05 01
TX：68 41 20 60 10 22 11 68 11 04 34 38 33 37 BF 16
RX：FE FE FE FE 68 41 20 60 10 22 11 68 91 05 34 38 33 37 53 93 16 
应答的运行状态字1: 53, 减去33, 就是20, 即0010 0000, 合闸状态

运行状态字1:bit7, 保留; bit5~bit6, 闸位状态, 00-分闸, 01-合闸; 
bit0~bit4, 跳闸、告警原因:
1	,	1	,	1	-	剩余电流预警, 
10	,	2	,	2	-	剩余电流, 
100	,	4	,	4	-	缺零, 
101	,	5	,	5	-	过载
110	,	6	,	6	-	短路短延时, 
111	,	7	,	7	-	缺相, 
1000,	8	,	8	-	欠压, 
1001,	9	,	9	-	过压, 
1010,	A	,	10	-	接地,
1011,	B	,	11	-	停电,
1101,	D	,	13	-	远程试验, 
1110,	E	,	14	-	按键试验, 
1111,	F	,	15	-	闭锁,
10010,	12	,	18	-	手动, 
10000,	10	,	16	-	互感器故障, 
10001,	11	,	17	-	合闸失败, 
10110,	16	,	22	-	短路瞬时, 
10111,	17	,	23	-	跳闸失败, 
10011,	13	,	19	-	设置更改, 
11110,	1E	,	30	-	软遥控, 
11101,	1D	,	29	-	硬遥控


分闸后的状态: FE FE FE FE 68 41 20 60 10 22 11 68 91 05 34 38 33 37 51 91 16
应答的运行状态字1: 51, 减去33, 就是1E, 即0 00 11110, 分闸状态, 且是通过软遥控合闸的

阔宇并网柜开关
立即合闸
68 01 00 00 00 00 00 68 1C 0E 34 35 34 39 33 33 33 33 33 33 33 33 33 35 D1 16

这个是立即跳闸
68 01 00 00 00 00 00 68 1C 0E 34 34 34 39 33 33 33 33 33 33 33 33 33 35 D0 16 

[2023-05-23 17:06:02][src/serial.c][sendcom()][304]: [send]bufSize:26; 68 01 00 00 00 00 00 68 1C 0E 34 34 34 39 33 33 33 33 33 33 33 33 33 35 D0 16
[2023-05-23 17:06:02][src/serial.c][readcom()][318]: [read]bufSize: 12; 68 01 00 00 00 00 00 68 9C 00 6D 16

阔宇并网柜开关
立即合闸
68 01 00 00 00 00 00 68 1C 0E 34 35 34 39 33 33 33 33 33 33 33 33 33 35 D1 16

这个是立即跳闸
68 01 00 00 00 00 00 68 1C 0E 34 34 34 39 33 33 33 33 33 33 33 33 33 35 D0 16 

遥控报文记录
单点：分 
预置：68 0E 0A 00 44 00 2D 01 06 00 01 00 01 60 00 80 
执行：68 0E 08 00 3C 00 2D 01 06 00 01 00 01 60 00 00 
撤销：68 0E 0C 00 46 00 2D 01 08 00 01 00 01 60 00 80 
单点：合 
预置：68 0E 16 00 9C 00 2D 01 06 00 01 00 01 60 00 81 
执行：68 0E 1C 00 A2 00 2D 01 06 00 01 00 01 60 00 01 
撤销：68 0E 18 00 9E 00 2D 01 08 00 01 00 01 60 00 81 
双点：分 
预置：68 0E 20 00 CC 00 2E 01 06 00 01 00 01 60 00 81 
执行：68 0E 26 00 D4 00 2E 01 06 00 01 00 01 60 00 01 
撤销：68 0E 22 00 D0 00 2E 01 08 00 01 00 01 60 00 81 
双点：合 
预置：68 0E 28 00 EC 00 2E 01 06 00 01 00 01 60 00 82 
执行：68 0E 2E 00 F4 00 2E 01 06 00 01 00 01 60 00 02 
撤销：68 0E 2A 00 EE 00 2E 01 08 00 01 00 01 60 00 82 

参数预置, 固化, 读取
[2023-05-23 09:19:07.518] 104接收:68 16 0A 00 1E 00 CB 01 06 00 01 00 00 00 80 22 80 00 26 04 00 00 60 41
[2023-05-23 09:19:07.629] 104发送:68 16 1E 00 0C 00 CB 01 07 00 01 00 00 00 80 22 80 00 26 04 00 00 60 41
[2023-05-23 09:19:07.738] 104接收:68 04 01 00 20 00

[2023-05-23 09:19:09.398] 104接收:68 0D 0C 00 20 00 CB 00 06 00 01 00 00 00 00
[2023-05-23 09:19:09.962] 104发送:68 0D 20 00 0E 00 CB 00 07 00 01 00 00 00 00
[2023-05-23 09:19:09.962] 104接收:68 04 01 00 22 00

[2023-05-23 09:19:11.606] 104接收:68 0F 0E 00 22 00 CA 01 06 00 01 00 00 00 22 80 00
[2023-05-23 09:19:11.715] 104发送:68 16 22 00 10 00 CA 01 07 00 01 00 00 00 00 22 80 00 26 04 00 00 60 41
[2023-05-23 09:19:11.822] 104接收:68 04 01 00 24 00




route add -host 162.168.100.37 dev usb0 
route add -host 172.20.40.157 dev eth1 
172.20.43.184


tcpdump 和libcap 配置
./configure --prefix=`pwd`/install --host=arm-linux CC=arm-linux-gnueabihf-gcc --enable-usb 


tcpdump -i FE0 port 2413

tcpdump host 162.168.100.38 -i usb0 port 2404

tcpdump tcp -i usb0  -s 0 -c 1000 and dst port 2404 -w ./target.cap

tcpdump host 192.168.100.1 and port 2404  -n -w data.cap
tcpdump host 192.168.60.6 and port 2404  -n -w data.cap
tcpdump ip 162.168.100.38 -i usb0 port 2404 -w ./target.cap

ping 162.168.100.38


tcpdump tcp -i usb0  -s 0 port 2404 -w ./target.cap

tcpdump  -i usb0  -s 0 port 2404 -w ./target.cap

跳闸
/bin/serial -c "/dev/ttymxc5" -b 9600 -p 0 -f"68 01 00 00 00 00 00 68 1C 0E 34 34 34 39 33 33 33 33 33 33 33 33 33 35 D0 16" -t 1

合闸
./serial -c "/dev/ttymxc5" -b 9600 -p 0 -f"68 01 00 00 00 00 00 68 1C 0E 34 35 34 39 33 33 33 33 33 33 33 33 33 35 D1 16" -t 1

/bin/serial -c "/dev/ttymxc2" -b 9600 -p 0 -f"68 AA AA AA AA AA AA 68 13 00 DF 16" -t 3

/bin/serial -c "/dev/ttymxc2" -b 9600 -p 0 -f"68 18 09 15 04 22 20 68 11 04 33 34 34 35 31 16" -t 3
FE FE FE FE 68 18 09 15 04 22 20 68 91 06 33 34 34 35 33 33 19 16
root@fl-imx6ull:~# /bin/serial -c "/dev/ttymxc2" -b 9600 -p 0 -f"68 18 09 15 04 22 20 68 11 04 33 34 34 35 31 16" -t 3"
option -c: /dev/ttymxc2
option -b: 9600
option -p: 0
option -f: 68 18 09 15 04 22 20 68 11 04 33 34 34 35 31 16
option -t: 3
[2023-06-07 08:55:18][src/serial.c][main()][505]: port: /dev/ttymxc2, baud: 10, parity: 0, stop: 1, bits: 8

listen: 0
times: 3
wait: 20
inv: 50
com: /dev/ttymxc2
baud: 9600
data: 8
stop: 1
par: 0
frame: 68 18 09 15 04 22 20 68 11 04 33 34 34 35 31 16
open fd-{3}  Successful 
68 18 09 15 04 22 20 68 11 04 33 34 34 35 31 16
[2023-06-07 08:55:18][src/serial.c][sendcom()][304]: [send]bufSize:16; 68 18 09 15 04 22 20 68 11 04 33 34 34 35 31 16
[2023-06-07 08:55:18][src/serial.c][readcom()][318]: [read]bufSize: 22; FE FE FE FE 68 18 09 15 04 22 20 68 91 06 33 34 34 35 33 33 19 16
[2023-06-07 08:55:19][src/serial.c][sendcom()][304]: [send]bufSize:16; 68 18 09 15 04 22 20 68 11 04 33 34 34 35 31 16
[2023-06-07 08:55:19][src/serial.c][readcom()][318]: [read]bufSize: 22; FE FE FE FE 68 18 09 15 04 22 20 68 91 06 33 34 34 35 33 33 19 16
[2023-06-07 08:55:20][src/serial.c][sendcom()][304]: [send]bufSize:16; 68 18 09 15 04 22 20 68 11 04 33 34 34 35 31 16
[2023-06-07 08:55:20][src/serial.c][readcom()][318]: [read]bufSize: 22; FE FE FE FE 68 18 09 15 04 22 20 68 91 06 33 34 34 35 33 33 19 16
FE FE FE FE 68 18 09 15 04 22 20 68 91 06 33 34 34 35 ([0-9a-fA-F]{2}\s){3}16

33 33 33 33 33 33 33 33 33 35
33 33 33 33 33 33 33 33 33 35
00 00 00 00 00 00 00 00
EB 00 0C EB 00 01 00 06 68 04 07 00 00 00 00 00 7A D7

68 04 07 00 00 00


EB 00 0E EB 00 00 61 00 09 01 3D E2 DC 7A E7 A0 9C B4 B7 D7

#代码走查注释

/************************************************************** 
文 件 名: ***.h
作    者: 杨国庆
版 本 号: 1.0 
生成日期: 2010.4.11
概    述: 本文件主要定义了冒烟测试中用到的宏和数据结构的定义； 
修改日志：为发送功能完善对 t_smktst_host 结构进行了扩充 2010.4.10 
*************************************************************/

作    者: 杨国庆
作    者: 宋宝善
作    者: 栾晓亮



/*******************************************************
* 函数名称: init
* ---------------------------------------------------
* 功能描述: 初始化函数
* ---------------------------------------------------
* 输入参数: tlink - 链路信息
* ---------------------------------------------------
* 输出参数: 无
* ---------------------------------------------------
* 返回值: 初始化成功 - 返回 0;
*         初始化失败 - 返回其他值
* ---------------------------------------------------
* 补充信息: 无
* 修改日志: 无
*******************************************************/

typedef struct _t_smktst_process
{
	char proc_name[MAX_PROC_NAME_LEN];	//进程名称 
	int process_id;						//进程 ID
	long lasttst_time;					//进程上次的测试时间 
	int tst_time;						//巡检次数；
	int change_flag;  //进程 ID 改变标志 0： ID 没有改变过，1：ID 改变过，2：没有获取过 ID
}t_smktst_process;


ffmpeg -i input.mp4 -vf scale = 3840x2560:flags = lanczos -c:v libx264 -preset slow -crf 21 output_compress_4k.mp4


ffmpeg -i input.mp4 -vf scale=3840x2560 -y output.mp4












小型化从载波问答报文:
[user\bsp\plc_slave\plcslave.c][plcSlave_thread][1105]recv: FE FE FE FE 68 AA AA AA AA AA AA 68 13 00 DF 16 
00> [user\bsp\plc_slave\plcslave.c][plcSlave_relpyDlt645Addr0x13][763][2019-6-24 0:21:35]: FE FE FE FE 68 37 08 03 04 23 20 68 93 06 6A 3B 36 37 56 53 AD 16 

00> [user\bsp\plc_slave\plcslave.c][plcSlave_thread][1105]recv: FE FE FE FE 68 99 99 99 99 99 99 68 1F 02 E2 35 9E 16 
00> [user\bsp\plc_slave\plcslave.c][plcSlave_relpyDlt645Addr0x1F][719]: FE FE FE FE 68 37 08 03 04 23 20 68 9F 08 E2 35 6A 3B 36 37 56 53 D2 16 

00> [user\bsp\plc_slave\plcslave.c][plcSlave_thread][1105]recv: FE FE FE FE 68 AA AA AA AA AA AA 68 13 00 DF 16 
00> [user\bsp\plc_slave\plcslave.c][plcSlave_relpyDlt645Addr0x13][763][2019-6-24 0:21:46]: FE FE FE FE 68 37 08 03 04 23 20 68 93 06 6A 3B 36 37 56 53 AD 16 

00> [user\bsp\plc_slave\plcslave.c][plcSlave_thread][1105]recv: FE FE FE FE 68 99 99 99 99 99 99 68 1F 02 E2 35 9E 16 
00> [user\bsp\plc_slave\plcslave.c][plcSlave_relpyDlt645Addr0x1F][719]: FE FE FE FE 68 37 08 03 04 23 20 68 9F 08 E2 35 6A 3B 36 37 56 53 D2 16 

00> [user\bsp\plc_slave\plcslave.c][plcSlave_thread][1105]recv: FE FE FE FE 68 AA AA AA AA AA AA 68 13 00 DF 16 
00> [user\bsp\plc_slave\plcslave.c][plcSlave_relpyDlt645Addr0x13][763][2019-6-24 0:22:57]: FE FE FE FE 68 37 08 03 04 23 20 68 93 06 6A 3B 36 37 56 53 AD 16 

00> [user\bsp\plc_slave\plcslave.c][plcSlave_thread][1105]recv: FE FE FE FE 68 99 99 99 99 99 99 68 1F 02 E2 35 9E 16 
00> [user\bsp\plc_slave\plcslave.c][plcSlave_relpyDlt645Addr0x1F][719]: FE FE FE FE 68 37 08 03 04 23 20 68 9F 08 E2 35 6A 3B 36 37 56 53 D2 16 

00> [user\bsp\plc_slave\plcslave.c][plcSlave_thread][1105]recv: FE FE FE FE 68 AA AA AA AA AA AA 68 13 00 DF 16 
00> [user\bsp\plc_slave\plcslave.c][plcSlave_relpyDlt645Addr0x13][763][2019-6-24 0:23:9]: FE FE FE FE 68 37 08 03 04 23 20 68 93 06 6A 3B 36 37 56 53 AD 16 

/bin/mosquitto_pub   -t "e9361app/set/request/e9361esdkapp/version"  -m  "{\"token\": \"200513\", \"timestamp\": \"2023-02-11T09:41:09.845+0800\", \"iHardVer\": \"V1.01.03\", \"iSoftdVer\": \"V1.00.04\", \"eHardVer\": \"SV01.03\", \"eSoftdVer\": \"SV01.004\", \"runtime_min\": 6, \"upprogram\": 0, \"watchdog\": 1 }" -h localhost

ps | grep e9361app | awk '{print  $1}'| xargs kill -9

mosquitto_sub -t "e9361app/set/request/e9361esdkapp/version" -h localhost

mosquitto_sub -t "e9361esdkapp/set/response/e9361app/version" -h localhost


$GNRMC,015936.099,V,,,,,0.00,0.00,060180,,,N*54


电科智芯张海龙，手机号 18613839368



03 03 03 FB 00 01 F4 5D 
FF FF FE FE FF 03 03 02 01 4A 41 E3


192.168.0.123
192.168.1.237
AA FF FF 03 00 06 05 00 00

类型：L21，厂商：东方电子股份有限公司，型号：E5402，ID：L210E0193093201909260001，硬件版本：HV61%2E01，生产日期：2019年09月26日。


类型：L21，厂商：东方电子股份有限公司，型号：E5402，ID：L210E0193093201909260002，硬件版本：HV61%2E01，生产日期：2019年09月26日。


L210E0193093201909260001




/bin/echo -e "AT+CGDCONT=?\r\n" | /usr/bin/microcom -s 9600 /dev/ttyUSB0 -t 500



姓名:大全吕峰
手机:182 6002 9579






sudo /home/sysadm/src/appSignTool -f /home/sysadm/src/c_ltu485/bin -b c_ltu485 -l /home/sysadm/src/c_ltu485/lib -v SV02.100 -o c_ltu485
sudo container install c_ltu485  /home/sysadm/src/c_ltu485.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3  -dev /dev/ttyS7:/dev/ttyS7 -v /data/app:/data/app  -p 5000:5000


container install c_ltu485  /home/sysadm/src/c_ltu485.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3    -dev /dev/ttyS7:/dev/ttyS7 -v /data/app:/data/app  -p 4850:4850 -p 2414:2414

container install c_ltu485  /home/sysadm/src/c_ltu485.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3    -dev /dev/ttyS7:/dev/ttyS7 -v /data/app:/data/app  -p 4850:4850 -p 2414:2414 --log-driver none

container install c_ltu485  /home/sysadm/src/c_ltu485.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3    -dev /dev/ttyS7:/dev/ttyS7 -v /data/app:/data/app  -p 4850:4850 -p 2414:2414 --log-driver=none --log-opt max-size=1m --log-opt max-file=3


container install c_ltu485  /home/sysadm/src/c_ltu485.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3    -dev /dev/ttyS7:/dev/ttyS7 -v /data/app:/data/app  -p 4950:4950

sudo systemctl daemon-reload
sudo systemctl restart docker

sudo docker exec -it c_ltu485 /bin/sh

/etc/docker/daemon.json
sudo route add -host 172.10.1.1 dev FE0



container install c_peidian  /home/sysadm/SCIEC104.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3    -dev /dev/ttyS7:/dev/ttyS7 -v /data/app:/data/app  -p 2413:2413


if (serial == null)
{
	MessageBox.Show("请打开通信端口!");
	return;
}



用户名: sysadm
密码: Zgdky@guest123
vi /usr/lib/systemd/network/10-network-eth0.network

{ "ProductKey": "a1fgAK1wZUS", "DeviceName": "TTU01", "DeviceSecret": "e4f5052d429b32e14b7e2d68aa0c5603" }




ping -I usb0 110.242.68.4





68 04 0b 00 00 00 



[23-06-21 17:03:40:521 ]  [SCIEC104] [NET Recv >>]: 68 04 07 00 00 00
[23-06-21 17:03:40:528 ]  [SCIEC104] [Rx]: 68 04 07 00 00 00
[23-06-21 17:03:40:528 ]  [SCIEC104] [Tx]: 68 04 0b 00 00 00
[23-06-21 17:03:40:529 ]  [SCIEC104] [Tx]: 68 0e 00 00 00 00 46 01 04 00 01 00 00 00 00 02
[23-06-21 17:03:40:796 ]  [SCIEC104] [NET Recv >>]: 68 0e 00 00 00 00 64 01 06 00 01 00 00 00 00 14
[23-06-21 17:03:40:806 ]  [SCIEC104] [Rx]: 68 0e 00 00 00 00 64 01 06 00 01 00 00 00 00 14
[23-06-21 17:03:40:816 ]  [SCIEC104] [Tx]: 68 0e 02 00 02 00 64 01 07 00 01 00 00 00 00 14
[23-06-21 17:03:40:827 ]  [SCIEC104] [Tx]: 68 99 04 00 02 00 0d 9c 14 00 01 00 01 40 00 9a 99 66 43 00 cd cc 66 43 00 cd 4c 67 43 00 e3 a5 5b 3f 00 6d e7 5b 3f 00 7f 6a bc 3d 00 de 71 4a 3e 00 ba da 4a 3e 00 9f ab ad 3c 00 cf 66 d5 3e 00 34 80 b7 ba 00 e0 2d 90 ba 00 27 a0 09 bb 00 52 49 9d bb 00 e1 7a c0 41 00 33 33 c1 41 00 a4 70 2d 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 52 b8 4b 42 00 00 00 00 00 00 8f c2 4b 42 00 00 00 00 00 00 00 00 00 00 00
[23-06-21 17:03:40:838 ]  [SCIEC104] [Tx]: 68 0e 06 00 02 00 64 01 0a 00 01 00 00 00 00 14
[23-06-21 17:03:41:020 ]  [SCIEC104] [NET Recv >>]: 68 0e 02 00 02 00 65 01 06 00 01 00 00 00 00 45
[23-06-21 17:03:41:023 ]  [SCIEC104] [Rx]: 68 0e 02 00 02 00 65 01 06 00 01 00 00 00 00 45
[23-06-21 17:03:41:024 ]  [SCIEC104] [Tx]: 68 0e 08 00 04 00 65 01 07 00 01 00 00 00 00 45
[23-06-21 17:03:41:035 ]  [SCIEC104] [Tx]: 68 0e 0a 00 04 00 65 01 0a 00 01 00 00 00 00 45
[23-06-21 17:03:41:193 ]  [SCIEC104] [NET Recv >>]: 68 14 04 00 02 00 67 01 06 00 01 00 00 00 00 da a1 03 11 75 06 17 68 04 01 00 08 00
[23-06-21 17:03:41:200 ]  [SCIEC104] [Rx]: 68 14 04 00 02 00 67 01 06 00 01 00 00 00 00 da a1 03 11 75 06 17
[23-06-21 17:03:41:460 ]  [SCIEC104] [Rx]: 68 04 01 00 08 00
[23-06-21 17:03:41:461 ]  [SCIEC104] [Tx]: 68 14 0c 00 06 00 67 01 07 00 01 00 00 00 00 da a1 03 11 75 06 17
[23-06-21 17:03:44:122 ]  [SCIEC104] [NET Recv >>]: 68 04 01 00 0e 00
[23-06-21 17:03:44:126 ]  [SCIEC104] [Rx]: 68 04 01 00 0e 00
[23-06-21 17:03:44:224 ]  [SCIEC104] [Server Mode Link Ok]:
[23-06-21 17:03:44:226 ]  [SCIEC104] [Server Mode You got a connection from client]:
[23-06-21 17:03:44:227 ]  [SCIEC104] [socket_task_start...]:
^C






D30DFDZPD001202306071114
D30DFDZPD001202306210001
D30DFDZPD001202306211111






flash_erase /dev/mtd4 0 0
nandwrite -p /dev/mtd4 /mnt/kernel/kerner_221115/linux-4.1.15/arch/arm/boot/zImage



68 59 07 37 18 21 80 68 91 18 34 34 39 38 45 67 89 AB 54 66 A7 67 34 78 99 45 AC 65 78 44 44 56 A3 4C 2A 16

68 59 07 37 18 21 80 68 91 18 34 35 39 38 45 67 89 AB 54 66 A7 67 34 78 99 45 AC 65 78 44 44 56 A3 4C 2B 16


读取版本号: AA FF FF 03 00 07 01 00 05


17:06:22.600  发送设置Dlt645地址 地址1 2 3 4 5 6

17:06:22.600  192.168.0.237发送报文：AA FF FF 08 00 06 05 01 02 03 04 05 06 0C

17:06:22.642  接收报文：AA FF FF 03 00 06 05 00 00

17:06:22.642  接收-设置Dlt645地址 地址1 2 3 4 5 6成功

17:07:00.987  发送读Dlt645地址

17:07:00.987  192.168.0.237发送报文：AA FF FF 03 00 06 06 01 02

17:07:01.045  接收报文：AA FF FF 08 00 06 06 01 02 03 04 05 06 0F

17:07:01.045  接收-读Dlt645地址成功,Dlt645地址:06 05 04 03 02 01 


EB 00 0C EB 00 01 00 06 10 69 01 00 6A 16 00 00 01 D7

10 8B 01 00 8C 16


http://172.20.88.241/svn/E9361BM/tests/E9361BM/E9361-C0/E9361-C0%E5%B7%A5%E8%A3%85%E8%B0%83%E8%AF%95%E7%A8%8B%E5%BA%8F/E9361-C0%E5%B7%A5%E8%A3%85%E8%B0%83%E8%AF%95%E7%A8%8B%E5%BA%8F-v3.00.01.zip

v3.00.01


E9361-C0工装调试软件


CXQ0001265


tar --numeric-owner --exclude=/proc --exclude=/sys --exclude=/mnt --exclude=/var/cache --exclude=/usr/share/{foomatic,backgrounds,perl5,fonts,cups,qt4,groff,kde4,icons,pixmaps,emacs,gnome-background-properties,sounds,gnome,games,desktop-directories} --exclude=/var/log -zcvf /mnt/CentOS7-BaseImage.tar /

cd /

# 将系统打包成tar包
# --directory 是被打包目录
# --exclude指定不打包的目录
tar -cvpf /docker/system.tar --directory=/ --exclude=docker --exclude=proc --exclude=temp
--exclude=sys --exclude=run

# 上传docker镜像
# ${repo_url} 是镜像源的地址，${image_name}是镜像名称，${tag_name}是镜像的标签名
# 导入镜像
docker import system.tar ${repo_url}/${image_name}:${tag_name}
# 检查镜像
docker images | grep ${image_name}
# 推送镜像
docker push ${repo_url}/${image_name}:${tag_name}

docker import centos7-base.tar centos7
docker run -itd --name JosonCentos centos7:latest /bin/bash

-fsanitize=address -fno-omit-frame-pointer

/etc/init.d/rpcbind restart
/etc/init.d/nfs-kernel-server restart

mount -t nfs -o nolock 192.168.31.108:/home/floyd/opt /nfs

tar --numeric-owner --exclude=/proc --exclude=/nfs --exclude=/var/cache --exclude=/var/log -zcvf /nfs/zx.tar /


tar --numeric-owner --exclude=/proc --exclude=/nfs --exclude=/var/cache --exclude=/var/log -zcvf /nfs/zx.tar /



mount -t nfs -o nolock 192.168.31.108:/home/floyd/opt /nfs


 arch/x86/entyr/vdso/vdso-image-64.c


08:33:46.590  发送PT100整定指令

08:33:46.590  发送报文：AA FF FF 07 00 04 30 01 31 00 00 00 03

08:33:46.612  接收报文：AA FF FF 03 00 04 30 11 26

08:34:16.439  发送PT100整定指令

08:34:16.439  发送报文：AA FF FF 07 00 04 30 00 9B 01 00 00 A9

08:34:16.469  接收报文：AA FF FF 03 00 04 30 11 26



Codeium
https://marketplace.eclipse.org/marketplace-client-intro?mpc_install=5630287


AA FF FF 04 00 06 0E 00 00 0C

V3.03.29 b0
V3.03.37 a0
V3.03.22 a1

http://172.20.88.241/svn/E9361BM/tests/E9361BM/E9361-A0/V3.03.37_%E5%B0%8F%E6%89%B9%E7%A8%8B%E5%BA%8F

http://172.20.88.241/svn/E9361BM/tests/E9361BM/E9361-A1/V3.03.22_%E5%B0%8F%E6%89%B9%E7%A8%8B%E5%BA%8F

http://172.20.88.241/svn/E9361BM/tests/E9361BM/E9361-B0/V3.03.29_%E5%B0%8F%E6%89%B9%E7%A8%8B%E5%BA%8F


车间滚动生产程序2023.8.11

宋宝善, 吕春生


E9361-A0
E9361-A1
E9361-B0

2023年08月更新
1、增加了维护规约遥控调试功能
2、增加了IEC101从规约增加单双向建立链路的功能
3、增加了modbus块采集混合数据类型采集
4、增加了数据计算及转换规约
5、修复已知bug


王海波，联系方式: 18611976658。

ip tunnel add tun0  mode gre remote 10.112.110.67 local 113.126.102.79  ttl 255


10.100.111.1
10.107.31.64
144.12.237.63
10.100.111.2
192.168.1.4
255.255.255.0

10.126.95.65

arm-linux-gnueabi-gcc
make ARCH=arm CROSS_COMPILE=arm-none-eabi- menuconfig
make ARCH=arm CROSS_COMPILE=arm-none-eabi- menuconfig
arm-poky-linux-gnueabi-

Sep 20 09:56:49 SCT230A security_proxy_bin[2601]: [INFO] B Master Recv  EB 00 F6 EB 00 42 30 00 F1 07 03 01 30 82 02 AD 30 82 02 51 A0 03 02 01 02 02 10 D1 C4 A7 3E 65 1F FD 9E
Sep 20 09:56:49 SCT230A security_proxy_bin[2601]: [INFO] B Master send len=13  EB 00 07 EB 00 40 45 00 02 90 00 17 D7
Sep 20 09:56:49 SCT230A security_proxy_bin[2601]: [INFO] B Master Recv  EB 00 F6 EB 00 42 30 00 F1 07 03 02 3B CE 5A 68 54 77 22 FE 5E EC 8B 5E A2 40 03 BB A1 BB D9 9C DC 16 8D
Sep 20 09:56:49 SCT230A security_proxy_bin[2601]: [INFO] B Master send len=13  EB 00 07 EB 00 40 45 00 02 90 00 17 D7
Sep 20 09:56:49 SCT230A security_proxy_bin[2601]: [INFO] B Master Recv  EB 00 F5 EB 00 42 30 00 F0 07 03 03 FE 30 81 89 06 03 55 1D 1F 04 81 81 30 7F 30 3D A0 3B A0 39 86 37 68
Sep 20 09:56:49 SCT230A security_proxy_bin[2601]: [INFO] B Master send len=19  EB 00 0D EB 00 40 31 00 08 59 54 AE FE D4 A9 FB 08 52 D7
Sep 20 09:56:49 SCT230A security_proxy_bin[2601]: [INFO] B Master Recv  EB 00 45 EB 00 42 32 00 40 A6 F7 2B 46 CC 3C E2 74 25 01 DE D6 B5 5C 67 E3 D4 AE E4 94 15 68 72 77 05 84
Sep 20 09:56:49 SCT230A security_proxy_bin[2601]: [INFO] B Master send len=13  EB 00 07 EB 00 40 33 00 02 90 00 05 D7





阿里云远程桌面IP 8.130.115.4      内网IP 172.20.34.54   255.255.240.0  172.20.34.54
USER:   adm



1. 企业标准(参考标准), 企标高于行标


dotnet new worker --name <Project.Name>
dotnet add package Microsoft.Extensions.Hosting.WindowsServices

sc.exe create ".NET Joke Service" binpath="C:\Path\To\dotnet.exe C:\Path\To\App.WindowsService.dll"


sc.exe create ".NET Joke Service" binpath="D:\mydoc\repo\wpf\mqtttest\DCSService\bin\publish\DCSService.exe"


sc.exe failure ".NET Joke Service" reset=0 actions=restart/60000/restart/60000/run/1000


sc.exe start ".NET Joke Service"
sc.exe stop ".NET Joke Service"
sc.exe delete ".NET Joke Service"
sc.exe create ".NET DCSBackgroundService" binpath="C:\software\DCSWebBackgroudService\DCSWebBackgroudService.exe"


主卡 15589585579
副卡 18561020790


postbuildStep="arm-linux-gnueabihf-strip e9361app"

#查看Windows共享内存
accesschk.exe -osv > objects.txt


青岛港QQCTU主站地址:
172.20.16.40、172.20.16.41，是两台服务器IP。  218.56.32.4：9052对应服务器172.20.16.40：2402端口；
218.56.32.4:9054 对应服务器172.20.16.41:2402端口。用于APP通讯

10.101.51.34

New release '18.04.6 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


#内核烧写
flash_erase /dev/mtd4 0 0
nandwrite -p /dev/mtd4 /home/root/zImage

#装载内核gre模块
insmod gre.ko#gre.ko放在当前目录
insmod ip_gre.ko#ip_gre.ko放在当前目录

#自动加载gre模块
#1. 将文件复制到 /lib/modules/`uname -r`/ 目录下
cp gre.ko ip_gre.ko /lib/modules/`uname -r`/

#2. 建立依赖信息
depmod -a

#3. 编辑/etc/modules/
echo gre >> /etc/modules
echo ip_gre >> /etc/modules

#4. 重启即可
reboot

#5. 查看是否有gre虚拟链路
ip link


#启动gre隧道. 创建了一个名为 tunnel0 的灰色隧道设备，并将其远程地址设置为192.168.9.166。隧道数据包将来自 192.168.0.231（本地IP地址），并且它们的TTL字段将被设置为255。隧道设备被分配IP地址10.10.10.1和netmask 255.255.255.0。
ip tunnel add tunnel0 mode gre remote 172.20.43.183 local 172.20.43.68 ttl 255 dev eth0
ip link set tunnel0 up
ip addr add 172.16.33.2/24 dev tunnel0
ip route add 192.168.71.0/24 dev tunnel0

#添加指向隧道接口的路由以引导流量进入隧道
ip route add 10.10.10.1/32 dev tunnel0
ip route add 172.16.20.20/32 dev tunnel0

#另一台主机gre隧道设置
ip tunnel add tunnel0 mode gre remote 172.20.43.68 local 172.20.43.183 ttl 255 dev eth0
ip link set tunnel0 up
ip addr add 172.16.33.1/24 dev tunnel0

#开启转发
#或者 echo "net.ipv4.ip_forward = 1">/etc/sysctl.conf && sysctl -p, 这样开机自动开启转发
echo 1 > /proc/sys/net/ipv4/ip_forward

#查看是否开启转发
cat /proc/sys/net/ipv4/ip_forward

#添加到192.168.2.0网络的路由转发
ip route add 192.168.2.0/24 dev tunnel0

#C0测试链路是否通畅
ping -c3 -I 172.16.33.1 172.16.33.2
ping -c3 -I 192.168.71.1 192.168.2.1

#windows测试链路是否通畅
ping -t -S 192.168.71.239 192.168.2.135

# /etc/network/interfaces -- configuration file for ifup(8), ifdown(8)

# The loopback interface
auto lo
iface lo inet loopback

# Wireless interfaces
iface wlan0 inet dhcp
        wireless_mode managed
        wireless_essid any
        wpa-driver wext
        wpa-conf /etc/wpa_supplicant.conf

iface atml0 inet dhcp

# Wired or wireless interfaces
auto eth0
#iface eth0 inet dhcp
#iface eth1 inet dhcp
iface eth0 inet static
address 172.20.43.183
netmask 255.255.252.0
gateway 172.20.40.1
broadcast 172.20.43.255

auto eth1
iface eth1 inet static
address 192.168.71.1
netmask 255.255.255.0
broadcast 192.168.71.255
network 192.168.71.0

# Ethernet/RNDIS gadget (g_ether)
# ... or on host side, usbnet and random hwaddr
iface usb0 inet static
        address 192.168.7.2
        netmask 255.255.255.0
        network 192.168.7.0
        gateway 192.168.7.1

# Bluetooth networking
iface bnep0 inet dhcp


### 下面的命令无用 start ###
route add -net 192.168.2.0 netmask 255.255.255.0 gw 172.16.33.1 dev tunnel0

route add -net 192.168.2.0 netmask 255.255.255.0 dev tunnel0

iptables -t nat -A POSTROUTING -s 192.168.71.0/24 -o eth0 -j MASQUERADE
iptables -t nat -A POSTROUTING -s 192.168.71.0/24 -o tunnel0 -j MASQUERADE
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
iptables -A FORWARD -i eth0 -o eth1 -j ACCEPT
iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
### 下面的命令无用 end ###

ip link del tunnel0


#删除所有配置文件
rm /data/app/e9361app/root/para/*


#Windows 网络配置
Connection-specific DNS Suffix  . :
   Description . . . . . . . . . . . : ASIX AX88179A USB 3.2 Gen1 to Gigabit Ethernet Adapter
   Physical Address. . . . . . . . . : 08-26-AE-3B-D6-B5
   DHCP Enabled. . . . . . . . . . . : No
   Autoconfiguration Enabled . . . . : Yes
   Link-local IPv6 Address . . . . . : fe80::eae8:ded9:952e:c3c%20(Preferred)
   IPv4 Address. . . . . . . . . . . : 172.20.43.180(Preferred)
   Subnet Mask . . . . . . . . . . . : 255.255.252.0
   IPv4 Address. . . . . . . . . . . : 192.168.0.127(Preferred)
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   IPv4 Address. . . . . . . . . . . : 192.168.1.127(Preferred)
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   IPv4 Address. . . . . . . . . . . : 192.168.21.126(Preferred)
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   IPv4 Address. . . . . . . . . . . : 192.168.31.127(Preferred)
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   IPv4 Address. . . . . . . . . . . : 192.168.71.239(Preferred)
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   IPv4 Address. . . . . . . . . . . : 192.168.80.233(Preferred)
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   IPv4 Address. . . . . . . . . . . : 192.168.100.233(Preferred)
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   IPv4 Address. . . . . . . . . . . : 192.168.127.127(Preferred)
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : 172.20.40.1+
   DHCPv6 IAID . . . . . . . . . . . : 1040721582
   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-2A-61-81-E3-00-2B-67-97-A7-D6
   DNS Servers . . . . . . . . . . . : fec0:0:0:ffff::1%1
                                       fec0:0:0:ffff::2%1
                                       fec0:0:0:ffff::3%1
                                       fec0:0:0:ffff::1%1
                                       fec0:0:0:ffff::2%1
                                       fec0:0:0:ffff::3%1
                                       fec0:0:0:ffff::1%1
                                       fec0:0:0:ffff::2%1
                                       fec0:0:0:ffff::3%1
                                       fec0:0:0:ffff::1%1
                                       fec0:0:0:ffff::2%1
                                       fec0:0:0:ffff::3%1
                                       192.168.50.212
                                       8.8.8.8
                                       192.168.50.212
                                       8.8.8.8
                                       192.168.50.212
                                       202.102.152.3


#vnc server
#!/bin/sh
unset DBUS_SESSION_BUS_ADDRESS
[ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup
[ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources
xsetroot -solid grey
vncconfig -iconic &
x-terminal-emulator -geometry 80x24+10+10 -ls -title "$VNCDESKTOP Desktop" &
x-window-manager &
mate-session &

#!/bin/sh
unset SESSION_MANAGER
unset DBUS_SESSION_BUS_ADDRESS
mate-session &
[ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup
[ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources
x-window-manager &

tigervncserver -xstartup /usr/bin/startxfce4 -geometry 800x600 -localhost no :1
tigervncserver -xstartup /usr/bin/startxfce4 -geometry 1920x1080 -localhost no :1
tigervncserver -xstartup /usr/bin/startxfce4 -geometry 2160x1440 -localhost no :1
tigervncserver -kill :1

vncserver -localhost no -geometry 2160x1440 -depth 24 -name remote-desktop :1

vncserver -localhost no -geometry 1920x1080 -depth 24 -name remote-desktop :1

#列出当前正在运行的服务
systemctl list-units --type=service --state=running

#修复不能安装的包
sudo dpkg -i --force-overwrite graphviz_2.42.2-7+b3_arm64.deb

#系统默认进入纯文本模式
sudo systemctl set-default multi-user.target

#系统默认启用图形界面
sudo systemctl set-default graphical.target

#mobian运行vncserver
在手机上安装wayvnc:  sudo apt install -y wayvnc
在手机上运行:  wayvnc localhost 5901
在windows上运行: ssh -L 5901:localhost:5901 mobian@mobian
再用RealVncViewer打开: localhost:5901 即可

#安装交叉工具链
sudo apt install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf


xV_PCF
Zero-Crossing Detection
RMS Calibration

spontaneous

02 03 64 01 00 0C 0B 0C
02 03 18 3F 5E B8 52 44 B9 1F AE 42 BD 19 9A 43 DE 0F 5C 44 04 88 F6 43 CE 17 0A 3C BC

1. 发电量跳变的事情客户会持续关注
2. 三相电表的发电量数据，对应的是主站和手机app的哪个数据
3. 2023.12.5日的数据异常，因为终端里没有记录当天的报文，所以无法查到具体原因，估计是因为逆变器的报文异常引起的，但主站要删除这个异常数据
4. 主站的发电量实时数据，在12月6日后有异常，一直不显示了
5. A0的通道频繁通断，要查询具体原因

ProtectApp/notify/spont/e9361appGetProtect/soe/LTU/0
{
	"token": "123",
	"timestamp": "2023-12-21T09:52:28.900+0800",
	"SourType": "104",
	"body": [
		{
			"name": "YX_0",
			"val": "1",
			"time": "2023-12-21T09:36:32.496+0800"
		},
		{
			"name": "YX_0",
			"val": "0",
			"time": "2023-12-21T09:37:02.460+0800"
		},
		{
			"name": "YX_1",
			"val": "1",
			"time": "2023-12-21T09:37:05.200+0800"
		}
	]
}



{
 "body":
 [
     {
         "content": "2022-12-1 发生保护跳闸事件",
         "type": "0", // 0 系统信息    1 历史信息
         "timestamp": "2019-03-01T09:30:08.230+0800"
     }
 ]
}

V3.02.34
/home/sysadm/src/

遥控1控合
AA FF FF 08 00 0B 04 01 01 00 00 00 00 07

遥控1控分
AA FF FF 08 00 0B 04 01 00 00 00 00 00 06

零票整定
AA FF FF 04 00 04 20 00 00 20

0°整定
AA FF FF 04 00 04 21 00 00 21

90°整定
AA FF FF 04 00 04 22 00 00 22

整定应答
AA FF FF 03 00 04 20 11 36 

###中文标点符号
，、。；

###信发客户电脑故障
203203470
1q2w3e

故障存储段 1605544873995916009，类型 5
事件名称: BEX64
响应: 不可用
Cab ID: 0

问题签名:
P1: 分支监测单元.exe
P2: 1.0.0.0
P3: 6552e5e0
P4: ucrtbase.dll
P5: 10.0.22621.2506
P6: 097c794c
P7: 000000000007f61e
P8: c0000409
P9: 0000000000000007
P10: 

附加文件:
\\?\C:\ProgramData\Microsoft\Windows\WER\Temp\WER.a0ef2a59-c2fd-40f6-9ab2-de8ebab1c9d3.tmp.mdmp
\\?\C:\ProgramData\Microsoft\Windows\WER\Temp\WER.14d42b63-0515-4e31-b4e4-04d29774a794.tmp.WERInternalMetadata.xml
\\?\C:\ProgramData\Microsoft\Windows\WER\Temp\WER.947e7c1d-e414-47b2-96d4-771f7f223ad4.tmp.csv
\\?\C:\ProgramData\Microsoft\Windows\WER\Temp\WER.2cf7ddfb-951b-47fb-889a-fbece2c34a05.tmp.txt
\\?\C:\ProgramData\Microsoft\Windows\WER\Temp\WER.3a5b9b57-269d-4e5c-b94a-cc57631ec9cb.tmp.xml

可在此处获取这些文件:
\\?\C:\ProgramData\Microsoft\Windows\WER\ReportArchive\AppCrash_分支监测单元.exe_24f0adbdf8d180a470beed4b52f88ccb646e4936_825034e8_0d40ee66-5b00-4da8-bd69-5f20ea423f72

分析符号: 
重新检查解决方案: 0
报告 ID: 96f808eb-3e76-4366-abd6-ec55d251cb59
报告状态: 268435456
哈希存储段: 895857af8f41685d86480a8e6d79d2e9
Cab GUID: 0

错误应用程序名称: 分支监测单元.exe，版本: 1.0.0.0，时间戳: 0x6552e5e0
错误模块名称: ucrtbase.dll，版本: 10.0.22621.2506，时间戳: 0x097c794c
异常代码: 0xc0000409
错误偏移量: 0x000000000007f61e
错误进程 ID: 0x0x117C
错误应用程序启动时间: 0x0x1DA45F97E7DD91A
错误应用程序路径: C:\Users\13969\Desktop\B0程序\Debug\Debug\分支监测单元.exe
错误模块路径: C:\Windows\System32\ucrtbase.dll
报告 ID: 7411809c-df0d-413e-a353-ca0cde88fd97
错误程序包全名: 
错误程序包相对应用程序 ID: 

ffmpeg -i input.mp4 -vf scale=3840x2560:flags=lanczos -c:v libx264 -preset slow -crf 21 output_compress_4k.mp4

#openssl 3.0.13交叉编译
./Configure --prefix=/home/floyd/sshinstall --cross-compile-prefix=arm-linux-gnueabihf- -no-asm shared
configure后，在生成的Makefile中删除 -m64 标记，不超过3处
然后，make -j8 && make install

#生成sm2私钥
openssl ecparam -genkey -name SM2 -out sm2.pem
#基于私钥生成公钥
openssl ec -in sm2.pem -inform pem -pubout -out sm2pub.pem

#生成100字节的随机数
openssl rand -base64 100

#配置源代码，注意configure前加sudo，否则总是报找不到FindBin这个perl模块的错误
sudo ./Configure linux-armv4  no-asm shared no-async --prefix=$(pwd)/install --cross-compile-prefix=arm-poky-linux-gnueabi-

sudo ./Configure linux-armv4  no-asm no-shared no-async --prefix=$(pwd)/install --cross-compile-prefix=arm-poky-linux-gnueabi-

#生成的Makefile是属于root用户的   需要运行  sudo chown book.book Makefile，改成book用户的
#然后修改Makefile的下面变量：
PLATFORM=arm
CROSS_COMPILE=
CC= arm-poky-linux-gnueabi-gcc -march=armv7ve -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/fsl-imx-x11/4.1.15-2.0.0/sysroots/cortexa7hf-neon-poky-linux-gnueabi
CXX=arm-poky-linux-gnueabi-g++ -march=armv7ve -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/fsl-imx-x11/4.1.15-2.0.0/sysroots/cortexa7hf-neon-poky-linux-gnueabi
CNF_CFLAGS=-pthread
CNF_CXXFLAGS=-std=c++11 -pthread

#将编译出来的库放到 /lib 下，注意删除以前 /lib 和 /usr/lib下的 libcrypto.so libssh.so.1.1.1
rm /lib/libcrypto.so* /lib/libssl.so* /usr/lib/libcrypto.so* /usr/lib/libssl.so*
cp /home/root/install/lib/libcrypto.so.1.1 /lib
cp /home/root/install/lib/libssl.so.1.1 /lib

#最后运行  ldconfig 刷新库文件缓存

#C0 配置文件路径
/data/app/e9361app/root/para/

#浙江天正断路器应答运行状态字1：
send: FE FE FE FE 68 06 05 04 03 02 01 68 91 04 34 38 33 37 50 16
recv: FE FE FE FE 68 06 05 04 03 02 01 68 91 05 34 38 33 37 5C AD 16, 状态1

FE FE FE FE 68 06 05 04 03 02 01 68 91 05 34 38 33 37 3C 8D 16, 状态0
FE FE FE FE 68 06 05 04 03 02 01 68 91 05 34 38 33 37 7C CD 16, 状态2
FE FE FE FE 68 06 05 04 03 02 01 68 91 05 34 38 33 37 9C ED 16, 状态3

#电表运行状态字1~3：
send: FE FE FE FE 68 06 05 04 03 02 01 68 91 04 34 38 33 37 50 16
recv: FE FE FE FE 68 06 05 04 03 02 01 68 91 06 34 38 33 37 32 32 B6 16, 状态1


登录
51.226
ssh -X ytdf@172.20.51.226
ytdf/ytdf000
登录后运行
export DISPLAY=172.20.43.219:0.0#IP换成自己笔记本的IP

起界面
kemp_qtiottool --name test

测试用户：test/test123!

模糊查询 cep
选择 ceppnp-rtu-test-pd

docker restart kemp-channeld_000_0

末端分支终端
EndTerminal



rm -rf /home/sysadm/e9361app* /home/sysadm/mkapp

appSignTool -f /home/sysadm/src/e9361app/bin -b e9361app -l /home/sysadm/src/e9361app/lib -v SV01.007 -o c_e9361app


container stop e9361app && container uninstall e9361app && /home/sysadm/appSignTool -f /home/sysadm/e9361app/bin -b e9361app -l /home/sysadm/e9361app/lib -v SV01.007 -o e9361app && sudo container install e9361app  /home/sysadm/e9361app.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3 -dev /dev/ttyRS4:/dev/ttyRS4 -v /data/app:/data/app -p 5000:5000 -p 2404:2404 -p 2504:2504


container stop e9361app && container uninstall e9361app && sudo container install e9361app  /home/sysadm/e9361app.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3 -dev /dev/ttyRS4:/dev/ttyRS4 -v /data/app:/data/app -p 5000:5000 -p 2404:2404 -p 2504:2504

container stop e9361app && container uninstall e9361app && sudo container install e9361app  /home/sysadm/e9361app.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3 -dev /dev/ttyRS4:/dev/ttyRS4 -v /data/app:/data/app -v /etc/timezone:/etc/timezone:ro -p 5000:5000 -p 5001:5001 -p 5002:5002 -p 5003:5003 -p 5004:5004 -p 5005:5005 -p 5006:5006 -p 5007:5007


container stop e9361app && container uninstall e9361app && sudo container install e9361app  /home/sysadm/e9361app.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3 -dev /dev/ttyRS4:/dev/ttyRS4 -v /data/app:/data/app -p 5000:5000 -p 5001:5001 -p 5002:5002 -p 5003:5003 -p 5004:5004 -p 5005:5005 -p 5006:5006 -p 5007:5007

container stop e9361app && container uninstall e9361app && sudo container install e9361app  /home/sysadm/e9361app.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3 -dev /dev/ttyRS4:/dev/ttyRS4 -v /data/app:/data/app -v /etc:/etc -p 5000:5000 -p 22:22


container restart e9361app

docker exec -it e9361app /bin/sh

docker logs -f e9361app

echo 'Asia/Shanghai' > /etc/timezone
echo 'Asia/Shanghai' > /etc/TZ

tail -f /data/app/e9361app/root/log/log.txt

-m  消息内容
-t    指定topic
-h   指定要连接的域名  默认为localhost

mosquitto_pub -t "" -m"" -h localhost

/nptl/pthread_mutex_lock.c:81: __pthread_mutex_cond_lock: Assertion `mutex->__data.__owner == 0' failed.


docker exec -it 1f65409511e1 ollama run llama3

docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama

https://www.bilibili.com/video/BV1Bi4y1j7sX/?spm_id_from=333.337.search-card.all.click&vd_source=fa80fc7dd821b976e71b81469d25ea44

https://www.bilibili.com/video/BV1y64y1U7H7/?spm_id_from=333.788.recommend_more_video.7&vd_source=fa80fc7dd821b976e71b81469d25ea44

https://www.bilibili.com/video/BV1zU4y1S763/?spm_id_from=333.788.recommend_more_video.11&vd_source=fa80fc7dd821b976e71b81469d25ea44

https://www.bilibili.com/video/BV1JK4y1t7io/?spm_id_from=333.788.recommend_more_video.14&vd_source=fa80fc7dd821b976e71b81469d25ea44

https://www.bilibili.com/video/BV1pf4y1974n/?spm_id_from=333.788.recommend_more_video.1&vd_source=fa80fc7dd821b976e71b81469d25ea44

https://www.bilibili.com/video/BV1fJ411i7PB/?spm_id_from=333.788.recommend_more_video.0&vd_source=fa80fc7dd821b976e71b81469d25ea44

https://www.bilibili.com/video/BV1JK4y1Y7xQ/?spm_id_from=333.788.recommend_more_video.4&vd_source=fa80fc7dd821b976e71b81469d25ea44


fprintf(stderr, "\033[0m\033[35m[%s][%s()][%d]------------------****************----------\033[0m\n",
			   __FILE__, __FUNCTION__, __LINE__);
			   
#windows 交叉编译		   
arm-linux-gnueabihf-gcc -o test test.c "-ID:\\mydoc\\repo\\dfe\\LinuxApp\\linux_TTU\\src\\include"  "-LD:\\mydoc\\repo\\dfe\\LinuxApp\\linux_TTU\\src\\lib" -lm -lssh2 -lssl -lcrypto -ldl -lrt -lpthread -Wl,-rpath,/usr/local/extapps/e9361app/lib

rm -f /home/sysadm/testapp.tar
/home/sysadm/appSignTool -f /home/sysadm/testapp/bin -b test -l /home/sysadm/testapp/lib -v SV01.007 -o testapp

container stop testapp && container uninstall testapp && sudo container install testapp  /home/sysadm/testapp.tar -dev /dev/ttyRS0:/dev/ttyRS0 -dev /dev/ttyRS1:/dev/ttyRS1 -dev /dev/ttyRS2:/dev/ttyRS2 -dev /dev/ttyRS3:/dev/ttyRS3 -dev /dev/ttyRS4:/dev/ttyRS4 -v /data/app:/data/app -v /etc:/etc -p 22:22

docker exec -it testapp /bin/sh


# ZeroTier交叉编译
# 下载ZeroTier源码
git clone https://github.com/zerotier/ZeroTierOne.git
cd ZeroTierOne

# 安装交叉编译工具链（如果未安装）
# sudo apt-get install gcc-arm-linux-gnueabihf
 
# 编译ZeroTier One
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-
 
# 将编译好的ZeroTier One文件传输到你的ARM32设备上
# 使用scp、sftp或其他方式
 
# 在ARM32设备上安装ZeroTier One
scp zerotier-one_*_armhf.deb user@arm32-device:/path/to/file
ssh user@arm32-device
sudo dpkg -i /path/to/file/zerotier-one_*_armhf.deb
 
# 启动ZeroTier One服务
sudo systemctl start zerotier-one
 
# 加入ZeroTier网络
# 需要登录ZeroTier官网获取网络ID，然后使用下面的命令
sudo zerotier-cli join your-zerotier-network-id

2,654,435,761
4,294,967,296

#9600 偶校验
serial -c "/dev/ttymxc2" -b 9600 -p 0 -f"68 17 00 43 05 14 15 13 10 10 62 00 A7 4C 05 01 04 60 00 02 00 00 6B 6F 16" -i 1024 -w 15

#9600 无校验
serial -c "/dev/ttymxc2" -b 9600 -p 2 -f"68 17 00 43 05 14 15 13 10 10 62 00 A7 4C 05 01 04 60 00 02 00 00 6B 6F 16" -i 1024 -w 15

serial -c "/dev/ttymxc5" -b 9600 -p 2 -l 1

01 03 03 84 00 01 c4 67

01 03 03 52 00 0C E4 5A

02 03 03 52 00 0C E4 69 #2号台区广场柔直

04 03 03 52 00 0C E4 0F #1号台区

03 03 03 52 00 0C E5 B8 #2号台区小柔直

05 03 03 52 00 0C E5 DE #3号台区

TX：05030352000CE5DE
[2024-06-27 12:09:13.840]
RX：05 03 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 92 7F 

阿里云设备
{ "ProductKey": "a1mIs9WXKXQ", "DeviceName": "TTU04_ForC1Test", "DeviceSecret": "20e542c60ef424ddbe017d8f54689efa" }
阿里云网址 139.224.42.2

wwan at send "AT+CSQ" dev ppp-0

sudo netstat -tlnp | grep 1883 #查看哪个程序占用了 1883 端口
2664/security_proxy


#698报文，读取当前正向有功电能
[2024-07-17 09:14:33.553]
TX：6817004305258108002001020a880501000010020000d51d16
[2024-07-17 09:14:34.687]
RX：FE FE FE FE 68 34 00 C3 05 25 81 08 00 20 01 02 E4 50 85 01 00 00 10 02 00 01 01 05 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 00 00 A8 58 16 
[2024-07-17 09:14:35.700]
TX：6817004305258108002001020a880501000010020000d51d16
[2024-07-17 09:14:36.833]
RX：FE FE FE FE 68 34 00 C3 05 25 81 08 00 20 01 02 E4 50 85 01 00 00 10 02 00 01 01 05 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 00 00 A8 58 16 
[2024-07-17 09:14:38.708]
TX：6817004305258108002001020a880501000010020000d51d16
[2024-07-17 09:14:39.846]
RX：FE FE FE FE 68 34 00 C3 05 25 81 08 00 20 01 02 E4 50 85 01 00 00 10 02 00 01 01 05 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 00 00 A8 58 16 
[2024-07-17 09:14:41.714]
TX：6817004305258108002001020a880501000010020000d51d16
[2024-07-17 09:14:42.853]
RX：FE FE FE FE 68 34 00 C3 05 25 81 08 00 20 01 02 E4 50 85 01 00 00 10 02 00 01 01 05 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 06 00 00 00 00 00 00 A8 58 16 

#645报文，读取当前A相电压
[2024-07-17 09:16:05.767]
TX：68258108002001681104333434358416
[2024-07-17 09:16:06.932]
RX：FE FE FE FE 68 25 81 08 00 20 01 68 91 06 33 34 34 35 36 55 91 16 
[2024-07-17 09:16:08.774]
TX：68258108002001681104333434358416
[2024-07-17 09:16:09.976]
RX：FE FE FE FE 68 25 81 08 00 20 01 68 91 06 33 34 34 35 3A 55 95 16 

docker inspect debian:12 | grep -i 'architecture'
docker run -t \
--platform arm64 \
-v /usr/bin/qemu-aarch64-static:/usr/bin/qemu-aarch64-static \
debian:12 \
uname -m

docker run \
--platform arm64 \
-v /usr/bin/qemu-aarch64-static:/usr/bin/qemu-aarch64-static \
debian:12



docker pull arm32v7/ubuntu:22.04
docker run arm32v7/ubuntu:22.04 -v /usr/bin/qemu-arm-static:/usr/bin/qemu-arm-static

docker pull arm64v8/ubuntu:22.04
docker run --platform linux/arm64  arm64v8/ubuntu:22.04

docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
docker run --rm --privileged multiarch/qemu-user-static:register --reset

#-i: 交互式操作。
#-t: 终端。
#-d: 指定容器的运行模式后台运行, 注：加了 -d 参数默认不会进入容器，想要进入容器需要使用指令 docker exec
#/bin/bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。
docker run -itd --restart=always --privileged --platform linux/arm64 -it arm64v8/ubuntu:22.04

#删除所有停止运行的容器
docker container prune


docker run -d -P training/webapp python app.py


docker run -itd --restart=always --privileged --platform linux/arm64 -it debian:12

#删除镜像hello-world
docker rmi hello-world

docker commit -m="has upgrade and install build-essential" -a="floyd" dreamy_ellis floyd/ubuntu:22.04v2

#映射udp端口
-p 127.0.0.1:5000:5000/udp


tar cvPjf /nfsmnt/backup.tar.bz2 --exclude=/proc --exclude=/lost+found --exclude=/nfsmnt --exclude=/mnt --exclude=/media --exclude=/dev --exclude=/tmp --exclude=/sys /

scp main root@192.168.1.232:/root

fromelf --bin -o  ../../Output/@L.bin   ../../Output/@L.axf
fromelf --text -a -c -o "$L@L.dis" "#L"

fromelf --bin -o  ./Output/@L.bin   ./Output/@L.axf
fromelf --text -a -c -o "$L@L.dis" "#L"

GD32E50X
GD32E50X_HD
USE_STDPERIPH_DRIVER

#Excel 条件语句
=IF(C197=K197, "TRUE", "FALSE")

关门 B5 05 20 00 00 00 DD BE
开门 B5 05 20 00 FF 00 9C 4E

#读取当前工作模式
TX: AA FF FF 04 00 04 01 00 00 01
RX：AA FF FF 06 00 04 01 00 00 00 00 03

#设置当前工作模式
TX: AA FF FF 04 00 04 04 00 00 04
RX：AA FF FF 04 00 04 04 00 00 04

#设置串口的配置波特率等信息
TX: AA FF FF 27 00 04 03 80 25 00 00 08 00 01 80 25 00 00 08 00 01 80 25 00 00 08 00 01 0A 00 0A 00 C8 00 00 00 00 00 00 00 00 00 00 00 44
RX：AA FF FF 06 00 04 03 00 00 00 00 01

#读取串口的配置波特率等信息
TX: AA FF FF 06 00 04 05 00 00 00 00 07
RX：AA FF FF 27 00 04 05 80 25 00 00 08 00 01 80 25 00 00 08 00 01 80 25 00 00 08 00 01 0A 00 0A 00 C8 00 00 00 00 00 00 00 00 00 00 00 42

#设置两主一从白名单
TX: AA FF FF 71 00 02 01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 10 01 00 00 00 00 00 02 00 00 00 00 00 03 00 00 00 00 00 04 00 00 00 00 00 05 00 00 00 00 00 06 00 00 00 00 00 07 00 00 00 00 00 08 00 00 00 00 00 09 00 00 00 00 00 0A 00 00 00 00 00 0B 00 00 00 00 00 0C 00 00 00 00 00 0D 00 00 00 00 00 0E 00 00 00 00 00 0F 00 00 00 00 00 10 00 00 00 00 00 73
RX：AA FF FF 06 00 02 01 00 00 00 00 05

#设置两主一从白名单, 645协议
TX: AA FF FF 71 00 02 01 01 01 00 00 00 00 00 00 00 00 00 00 00 00 10 01 00 00 00 00 00 02 00 00 00 00 00 03 00 00 00 00 00 04 00 00 00 00 00 05 00 00 00 00 00 06 00 00 00 00 00 07 00 00 00 00 00 08 07 06 05 04 03 09 00 00 00 00 00 0A 00 00 00 00 00 0B 00 00 00 00 00 0C 00 00 00 00 00 0D 00 00 00 00 00 0E 00 00 00 00 00 0F 00 00 00 00 00 10 00 00 00 00 00 71
RX：AA FF FF 06 00 02 01 00 00 00 00 05

#读取两主一从白名单
TX: AA FF FF 06 00 02 02 00 00 00 00 06
RX：AA FF FF 71 00 02 02 01 00 00 00 00 00 00 00 00 00 00 00 00 00 10 01 00 00 00 00 00 02 00 00 00 00 00 03 00 00 00 00 00 04 00 00 00 00 00 05 00 00 00 00 00 06 00 00 00 00 00 07 00 00 00 00 00 08 00 00 00 00 00 09 00 00 00 00 00 0A 00 00 00 00 00 0B 00 00 00 00 00 0C 00 00 00 00 00 0D 00 00 00 00 00 0E 00 00 00 00 00 0F 00 00 00 00 00 10 00 00 00 00 00 70

#设置地址转换模式的配置
TX: AA FF FF 7E 00 03 01 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 12 01 02 11 00 12 00 03 04 13 00 14 00 05 06 15 00 16 00 07 08 17 00 18 00 09 0A 19 00 1A 00 0B 0C 1B 00 1C 00 0D 0E 1D 00 1E 00 0F 10 1F 00 20 00 11 12 21 00 22 00 13 14 23 00 24 00 15 16 25 00 26 00 17 18 27 00 28 00 19 1A 29 00 2A 00 1B 1C 2B 00 2C 00 1D 1E 2D 00 2E 00 1F 20 2F 00 30 00 21 22 31 00 32 00 23 24 33 00 34 00 6F
RX：AA FF FF 06 00 03 01 00 00 00 00 04

#读取地址转换模式的配置
TX: AA FF FF 06 00 03 02 00 00 00 00 07
RX：AA FF FF 7E 00 03 02 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 12 01 02 11 00 12 00 03 04 13 00 14 00 05 06 15 00 16 00 07 08 17 00 18 00 09 0A 19 00 1A 00 0B 0C 1B 00 1C 00 0D 0E 1D 00 1E 00 0F 10 1F 00 20 00 11 12 21 00 22 00 13 14 23 00 24 00 15 16 25 00 26 00 17 18 27 00 28 00 19 1A 29 00 2A 00 1B 1C 2B 00 2C 00 1D 1E 2D 00 2E 00 1F 20 2F 00 30 00 21 22 31 00 32 00 23 24 33 00 34 00 6C


#modbus 读取1个寄存器的整数值
01 03 00 01 00 01 D5 CA
01 03 00 02 00 01 25 CA
01 03 00 0B 00 01 F5 C8
01 03 00 0C 00 01 44 09
01 03 00 03 00 01 74 0A
01 03 00 05 00 01 94 0B
01 03 00 07 00 01 35 CB

#645白名单测试
68 01 00 00 00 00 00 68 91 04 34 38 33 37 3C 16
68 08 07 06 05 04 03 68 91 04 34 38 33 37 5C 16